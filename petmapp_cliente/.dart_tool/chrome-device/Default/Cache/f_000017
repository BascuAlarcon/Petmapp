define(['dart_sdk', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/widgets/icon_theme.dart', 'packages/flutter/src/widgets/icon_theme_data.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/material/icons.dart', 'packages/flutter/src/foundation/_platform_web.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/widgets/icon_data.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/animation/listener_helpers.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/painting/matrix_utils.dart', 'packages/vector_math/vector_math_64.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/rendering/layout_helper.dart', 'packages/flutter/src/rendering/shifted_box.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/material/constants.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/foundation/key.dart', 'packages/flutter/src/widgets/safe_area.dart', 'packages/flutter/src/widgets/dismissible.dart', 'packages/flutter/src/foundation/object.dart', 'packages/flutter/src/foundation/print.dart', 'packages/flutter/src/painting/circle_border.dart', 'packages/flutter/src/painting/stadium_border.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/widgets/implicit_animations.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/gestures/drag_details.dart', 'packages/flutter/src/widgets/single_child_scroll_view.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/rendering/paragraph.dart', 'packages/flutter/src/painting/_network_image_web.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/material/tab_controller.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/widgets/preferred_size.dart', 'packages/flutter/src/material/tab_indicator.dart', 'packages/flutter/src/widgets/page_view.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/flutter/src/widgets/dual_transition_builder.dart', 'packages/flutter/src/animation/tween_sequence.dart', 'packages/flutter/src/cupertino/route.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/gestures/binding.dart', 'packages/flutter/src/semantics/semantics_service.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/painting/geometry.dart', 'packages/flutter/src/semantics/semantics_event.dart', 'packages/flutter/src/services/system_sound.dart', 'packages/flutter/src/services/haptic_feedback.dart', 'packages/flutter/src/gestures/tap.dart', 'packages/flutter/src/foundation/observer_list.dart', 'packages/flutter/src/widgets/bottom_navigation_bar_item.dart', 'packages/flutter/src/painting/notched_shapes.dart', 'packages/flutter/src/material/typography.dart', 'packages/flutter/src/material/floating_action_button_theme.dart', 'packages/flutter/src/material/bottom_sheet_theme.dart', 'packages/flutter/src/cupertino/text_theme.dart', 'packages/flutter/src/widgets/draggable_scrollable_sheet.dart', 'packages/flutter/src/rendering/custom_layout.dart', 'packages/flutter/src/services/system_channels.dart', 'packages/flutter/src/scheduler/ticker.dart', 'packages/flutter/src/foundation/synchronous_future.dart', 'packages/flutter/src/services/system_chrome.dart', 'packages/flutter/src/widgets/navigation_toolbar.dart', 'packages/flutter/src/rendering/stack.dart', 'packages/flutter/src/semantics/semantics.dart', 'packages/flutter/src/widgets/annotated_region.dart', 'packages/flutter/src/rendering/sliver_persistent_header.dart', 'packages/flutter/src/widgets/sliver_persistent_header.dart'], (function load__packages__flutter__src__material__icon_button_dart(dart_sdk, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__widgets__icon_theme$46dart, packages__flutter__src__widgets__icon_theme_data$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__material__icons$46dart, packages__flutter__src__foundation___platform_web$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__widgets__icon_data$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__animation__listener_helpers$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__painting__matrix_utils$46dart, packages__vector_math__vector_math_64$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__rendering__layout_helper$46dart, packages__flutter__src__rendering__shifted_box$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__material__constants$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__foundation__key$46dart, packages__flutter__src__widgets__safe_area$46dart, packages__flutter__src__widgets__dismissible$46dart, packages__flutter__src__foundation__object$46dart, packages__flutter__src__foundation__print$46dart, packages__flutter__src__painting__circle_border$46dart, packages__flutter__src__painting__stadium_border$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__widgets__implicit_animations$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__gestures__drag_details$46dart, packages__flutter__src__widgets__single_child_scroll_view$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__rendering__paragraph$46dart, packages__flutter__src__painting___network_image_web$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__material__tab_controller$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__widgets__preferred_size$46dart, packages__flutter__src__material__tab_indicator$46dart, packages__flutter__src__widgets__page_view$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__flutter__src__widgets__dual_transition_builder$46dart, packages__flutter__src__animation__tween_sequence$46dart, packages__flutter__src__cupertino__route$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__gestures__binding$46dart, packages__flutter__src__semantics__semantics_service$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__painting__geometry$46dart, packages__flutter__src__semantics__semantics_event$46dart, packages__flutter__src__services__system_sound$46dart, packages__flutter__src__services__haptic_feedback$46dart, packages__flutter__src__gestures__tap$46dart, packages__flutter__src__foundation__observer_list$46dart, packages__flutter__src__widgets__bottom_navigation_bar_item$46dart, packages__flutter__src__painting__notched_shapes$46dart, packages__flutter__src__material__typography$46dart, packages__flutter__src__material__floating_action_button_theme$46dart, packages__flutter__src__material__bottom_sheet_theme$46dart, packages__flutter__src__cupertino__text_theme$46dart, packages__flutter__src__widgets__draggable_scrollable_sheet$46dart, packages__flutter__src__rendering__custom_layout$46dart, packages__flutter__src__services__system_channels$46dart, packages__flutter__src__scheduler__ticker$46dart, packages__flutter__src__foundation__synchronous_future$46dart, packages__flutter__src__services__system_chrome$46dart, packages__flutter__src__widgets__navigation_toolbar$46dart, packages__flutter__src__rendering__stack$46dart, packages__flutter__src__semantics__semantics$46dart, packages__flutter__src__widgets__annotated_region$46dart, packages__flutter__src__rendering__sliver_persistent_header$46dart, packages__flutter__src__widgets__sliver_persistent_header$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const ui = dart_sdk.ui;
  const _internal = dart_sdk._internal;
  const _interceptors = dart_sdk._interceptors;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const mouse_cursor = packages__flutter__src__rendering__layer$46dart.src__rendering__mouse_cursor;
  const box$ = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const binding = packages__flutter__src__rendering__layer$46dart.src__rendering__binding;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const navigator$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__navigator;
  const debug = packages__flutter__src__widgets__widget_span$46dart.src__widgets__debug;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const text$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const transitions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__transitions;
  const heroes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__heroes;
  const inherited_theme = packages__flutter__src__widgets__widget_span$46dart.src__widgets__inherited_theme;
  const routes = packages__flutter__src__widgets__widget_span$46dart.src__widgets__routes;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const gesture_detector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__gesture_detector;
  const scroll_position_with_single_context = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position_with_single_context;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const notification_listener = packages__flutter__src__widgets__widget_span$46dart.src__widgets__notification_listener;
  const pages = packages__flutter__src__widgets__widget_span$46dart.src__widgets__pages;
  const overlay$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__overlay;
  const actions = packages__flutter__src__widgets__widget_span$46dart.src__widgets__actions;
  const automatic_keep_alive = packages__flutter__src__widgets__widget_span$46dart.src__widgets__automatic_keep_alive;
  const restoration_properties = packages__flutter__src__widgets__widget_span$46dart.src__widgets__restoration_properties;
  const primary_scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__primary_scroll_controller;
  const modal_barrier = packages__flutter__src__widgets__widget_span$46dart.src__widgets__modal_barrier;
  const restoration = packages__flutter__src__widgets__widget_span$46dart.src__widgets__restoration;
  const localizations$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__localizations;
  const scrollable = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scrollable;
  const scroll_position = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position;
  const icon_theme = packages__flutter__src__widgets__icon_theme$46dart.src__widgets__icon_theme;
  const icon_theme_data = packages__flutter__src__widgets__icon_theme_data$46dart.src__widgets__icon_theme_data;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const debug$ = packages__flutter__src__foundation__debug$46dart.src__foundation__debug;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const icons = packages__flutter__src__material__icons$46dart.src__material__icons;
  const platform$ = packages__flutter__src__foundation___platform_web$46dart.src__foundation__platform;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const icon_data = packages__flutter__src__widgets__icon_data$46dart.src__widgets__icon_data;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const tween = packages__flutter__src__animation__listener_helpers$46dart.src__animation__tween;
  const animation = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animation;
  const animations = packages__flutter__src__animation__listener_helpers$46dart.src__animation__animations;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const matrix_utils = packages__flutter__src__painting__matrix_utils$46dart.src__painting__matrix_utils;
  const vector_math_64 = packages__vector_math__vector_math_64$46dart.vector_math_64;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const colors$ = packages__flutter__src__material__colors$46dart.src__material__colors;
  const layout_helper = packages__flutter__src__rendering__layout_helper$46dart.src__rendering__layout_helper;
  const shifted_box = packages__flutter__src__rendering__shifted_box$46dart.src__rendering__shifted_box;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const constants = packages__flutter__src__material__constants$46dart.src__material__constants;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const key = packages__flutter__src__foundation__key$46dart.src__foundation__key;
  const safe_area = packages__flutter__src__widgets__safe_area$46dart.src__widgets__safe_area;
  const dismissible = packages__flutter__src__widgets__dismissible$46dart.src__widgets__dismissible;
  const object$ = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  const print = packages__flutter__src__foundation__print$46dart.src__foundation__print;
  const circle_border = packages__flutter__src__painting__circle_border$46dart.src__painting__circle_border;
  const stadium_border = packages__flutter__src__painting__stadium_border$46dart.src__painting__stadium_border;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const implicit_animations = packages__flutter__src__widgets__implicit_animations$46dart.src__widgets__implicit_animations;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const drag_details = packages__flutter__src__gestures__drag_details$46dart.src__gestures__drag_details;
  const single_child_scroll_view = packages__flutter__src__widgets__single_child_scroll_view$46dart.src__widgets__single_child_scroll_view;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const paragraph = packages__flutter__src__rendering__paragraph$46dart.src__rendering__paragraph;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const tab_controller = packages__flutter__src__material__tab_controller$46dart.src__material__tab_controller;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const preferred_size = packages__flutter__src__widgets__preferred_size$46dart.src__widgets__preferred_size;
  const tab_indicator = packages__flutter__src__material__tab_indicator$46dart.src__material__tab_indicator;
  const page_view = packages__flutter__src__widgets__page_view$46dart.src__widgets__page_view;
  const text_painter = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_painter;
  const dual_transition_builder = packages__flutter__src__widgets__dual_transition_builder$46dart.src__widgets__dual_transition_builder;
  const tween_sequence = packages__flutter__src__animation__tween_sequence$46dart.src__animation__tween_sequence;
  const route$ = packages__flutter__src__cupertino__route$46dart.src__cupertino__route;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const binding$ = packages__flutter__src__gestures__binding$46dart.src__gestures__binding;
  const semantics_service = packages__flutter__src__semantics__semantics_service$46dart.src__semantics__semantics_service;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const geometry = packages__flutter__src__painting__geometry$46dart.src__painting__geometry;
  const semantics_event = packages__flutter__src__semantics__semantics_event$46dart.src__semantics__semantics_event;
  const system_sound = packages__flutter__src__services__system_sound$46dart.src__services__system_sound;
  const haptic_feedback = packages__flutter__src__services__haptic_feedback$46dart.src__services__haptic_feedback;
  const tap = packages__flutter__src__gestures__tap$46dart.src__gestures__tap;
  const observer_list = packages__flutter__src__foundation__observer_list$46dart.src__foundation__observer_list;
  const bottom_navigation_bar_item = packages__flutter__src__widgets__bottom_navigation_bar_item$46dart.src__widgets__bottom_navigation_bar_item;
  const notched_shapes = packages__flutter__src__painting__notched_shapes$46dart.src__painting__notched_shapes;
  const typography$ = packages__flutter__src__material__typography$46dart.src__material__typography;
  const text_theme = packages__flutter__src__material__typography$46dart.src__material__text_theme;
  const floating_action_button_theme = packages__flutter__src__material__floating_action_button_theme$46dart.src__material__floating_action_button_theme;
  const bottom_sheet_theme = packages__flutter__src__material__bottom_sheet_theme$46dart.src__material__bottom_sheet_theme;
  const theme = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__theme;
  const colors$0 = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__colors;
  const text_theme$ = packages__flutter__src__cupertino__text_theme$46dart.src__cupertino__text_theme;
  const draggable_scrollable_sheet = packages__flutter__src__widgets__draggable_scrollable_sheet$46dart.src__widgets__draggable_scrollable_sheet;
  const custom_layout = packages__flutter__src__rendering__custom_layout$46dart.src__rendering__custom_layout;
  const restoration$ = packages__flutter__src__services__system_channels$46dart.src__services__restoration;
  const ticker = packages__flutter__src__scheduler__ticker$46dart.src__scheduler__ticker;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  const system_chrome = packages__flutter__src__services__system_chrome$46dart.src__services__system_chrome;
  const navigation_toolbar = packages__flutter__src__widgets__navigation_toolbar$46dart.src__widgets__navigation_toolbar;
  const stack = packages__flutter__src__rendering__stack$46dart.src__rendering__stack;
  const semantics = packages__flutter__src__semantics__semantics$46dart.src__semantics__semantics;
  const annotated_region = packages__flutter__src__widgets__annotated_region$46dart.src__widgets__annotated_region;
  const sliver_persistent_header = packages__flutter__src__rendering__sliver_persistent_header$46dart.src__rendering__sliver_persistent_header;
  const sliver_persistent_header$ = packages__flutter__src__widgets__sliver_persistent_header$46dart.src__widgets__sliver_persistent_header;
  var icon_button = Object.create(dart.library);
  var back_button = Object.create(dart.library);
  var time = Object.create(dart.library);
  var ink_ripple = Object.create(dart.library);
  var button_style_button = Object.create(dart.library);
  var text_button = Object.create(dart.library);
  var snack_bar = Object.create(dart.library);
  var floating_action_button_location = Object.create(dart.library);
  var floating_action_button = Object.create(dart.library);
  var flexible_space_bar = Object.create(dart.library);
  var list_tile = Object.create(dart.library);
  var drawer = Object.create(dart.library);
  var divider = Object.create(dart.library);
  var dialog = Object.create(dart.library);
  var raised_button = Object.create(dart.library);
  var outline_button = Object.create(dart.library);
  var material_button = Object.create(dart.library);
  var button = Object.create(dart.library);
  var flat_button = Object.create(dart.library);
  var toggle_buttons_theme = Object.create(dart.library);
  var time_picker_theme = Object.create(dart.library);
  var text_selection_theme = Object.create(dart.library);
  var text_button_theme = Object.create(dart.library);
  var tabs$ = Object.create(dart.library);
  var tab_bar_theme = Object.create(dart.library);
  var switch_theme = Object.create(dart.library);
  var snack_bar_theme = Object.create(dart.library);
  var slider_theme = Object.create(dart.library);
  var scrollbar_theme = Object.create(dart.library);
  var radio_theme = Object.create(dart.library);
  var popup_menu_theme = Object.create(dart.library);
  var page_transitions_theme = Object.create(dart.library);
  var outlined_button_theme = Object.create(dart.library);
  var navigation_rail = Object.create(dart.library);
  var navigation_rail_theme = Object.create(dart.library);
  var input_decorator = Object.create(dart.library);
  var ink_splash = Object.create(dart.library);
  var button_style = Object.create(dart.library);
  var elevated_button_theme = Object.create(dart.library);
  var divider_theme = Object.create(dart.library);
  var dialog_theme = Object.create(dart.library);
  var data_table_theme = Object.create(dart.library);
  var chip_theme = Object.create(dart.library);
  var checkbox_theme = Object.create(dart.library);
  var card_theme = Object.create(dart.library);
  var tooltip_theme = Object.create(dart.library);
  var tooltip = Object.create(dart.library);
  var ink_highlight = Object.create(dart.library);
  var feedback = Object.create(dart.library);
  var ink_well = Object.create(dart.library);
  var bottom_navigation_bar = Object.create(dart.library);
  var bottom_navigation_bar_theme = Object.create(dart.library);
  var bottom_app_bar_theme = Object.create(dart.library);
  var banner_theme = Object.create(dart.library);
  var theme_data = Object.create(dart.library);
  var color_scheme = Object.create(dart.library);
  var button_theme = Object.create(dart.library);
  var button_bar_theme = Object.create(dart.library);
  var button_bar = Object.create(dart.library);
  var bottom_sheet = Object.create(dart.library);
  var scaffold$ = Object.create(dart.library);
  var elevation_overlay = Object.create(dart.library);
  var material = Object.create(dart.library);
  var debug$0 = Object.create(dart.library);
  var material_localizations = Object.create(dart.library);
  var theme$ = Object.create(dart.library);
  var app_bar_theme = Object.create(dart.library);
  var app_bar = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T$ = {
    _LocationL: () => (T$._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    DiagnosticsPropertyOfWidget: () => (T$.DiagnosticsPropertyOfWidget = dart.constFn(diagnostics.DiagnosticsProperty$(framework.Widget)))(),
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ObjectFlagPropertyOfVoidTovoid: () => (T$.ObjectFlagPropertyOfVoidTovoid = dart.constFn(diagnostics.ObjectFlagProperty$(T$.VoidTovoid())))(),
    DiagnosticsPropertyOfEdgeInsetsGeometry: () => (T$.DiagnosticsPropertyOfEdgeInsetsGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(edge_insets.EdgeInsetsGeometry)))(),
    DiagnosticsPropertyOfFocusNode: () => (T$.DiagnosticsPropertyOfFocusNode = dart.constFn(diagnostics.DiagnosticsProperty$(focus_manager.FocusNode)))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    DayPeriodL: () => (T$.DayPeriodL = dart.constFn(dart.legacy(time.DayPeriod)))(),
    intToString: () => (T$.intToString = dart.constFn(dart.fnType(core.String, [core.int])))(),
    TimeOfDayFormatL: () => (T$.TimeOfDayFormatL = dart.constFn(dart.legacy(time.TimeOfDayFormat)))(),
    HourFormatL: () => (T$.HourFormatL = dart.constFn(dart.legacy(time.HourFormat)))(),
    TweenOfdouble: () => (T$.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    JSArrayOfRenderObject: () => (T$.JSArrayOfRenderObject = dart.constFn(_interceptors.JSArray$(object.RenderObject)))(),
    VoidToRect: () => (T$.VoidToRect = dart.constFn(dart.fnType(ui.Rect, [])))(),
    DiagnosticsPropertyOfButtonStyle: () => (T$.DiagnosticsPropertyOfButtonStyle = dart.constFn(diagnostics.DiagnosticsProperty$(button_style.ButtonStyle)))(),
    LinkedHashSetOfMaterialState: () => (T$.LinkedHashSetOfMaterialState = dart.constFn(collection.LinkedHashSet$(material_state.MaterialState)))(),
    ButtonStyleN: () => (T$.ButtonStyleN = dart.constFn(dart.nullable(button_style.ButtonStyle)))(),
    FnToTN: () => (T$.FnToTN = dart.constFn(dart.gFnType(T => [dart.nullable(T), [dart.fnType(dart.nullable(T), [T$.ButtonStyleN()])]], T => [T$.ObjectN()])))(),
    FnToTN$1: () => (T$.FnToTN$1 = dart.constFn(dart.gFnType(T => [dart.nullable(T), [dart.fnType(dart.nullable(material_state.MaterialStateProperty$(T)), [T$.ButtonStyleN()])]], T => [T$.ObjectN()])))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    MaterialStatePropertyOfdoubleN: () => (T$.MaterialStatePropertyOfdoubleN = dart.constFn(material_state.MaterialStateProperty$(T$.doubleN())))(),
    MaterialStatePropertyNOfdoubleN: () => (T$.MaterialStatePropertyNOfdoubleN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfdoubleN())))(),
    ButtonStyleNToMaterialStatePropertyNOfdoubleN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfdoubleN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfdoubleN(), [T$.ButtonStyleN()])))(),
    TextStyleN: () => (T$.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    MaterialStatePropertyOfTextStyleN: () => (T$.MaterialStatePropertyOfTextStyleN = dart.constFn(material_state.MaterialStateProperty$(T$.TextStyleN())))(),
    MaterialStatePropertyNOfTextStyleN: () => (T$.MaterialStatePropertyNOfTextStyleN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfTextStyleN())))(),
    ButtonStyleNToMaterialStatePropertyNOfTextStyleN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfTextStyleN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfTextStyleN(), [T$.ButtonStyleN()])))(),
    ColorN: () => (T$.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    MaterialStatePropertyOfColorN: () => (T$.MaterialStatePropertyOfColorN = dart.constFn(material_state.MaterialStateProperty$(T$.ColorN())))(),
    MaterialStatePropertyNOfColorN: () => (T$.MaterialStatePropertyNOfColorN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfColorN())))(),
    ButtonStyleNToMaterialStatePropertyNOfColorN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfColorN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfColorN(), [T$.ButtonStyleN()])))(),
    EdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryN = dart.constFn(dart.nullable(edge_insets.EdgeInsetsGeometry)))(),
    MaterialStatePropertyOfEdgeInsetsGeometryN: () => (T$.MaterialStatePropertyOfEdgeInsetsGeometryN = dart.constFn(material_state.MaterialStateProperty$(T$.EdgeInsetsGeometryN())))(),
    MaterialStatePropertyNOfEdgeInsetsGeometryN: () => (T$.MaterialStatePropertyNOfEdgeInsetsGeometryN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfEdgeInsetsGeometryN())))(),
    ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfEdgeInsetsGeometryN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfEdgeInsetsGeometryN(), [T$.ButtonStyleN()])))(),
    SizeN: () => (T$.SizeN = dart.constFn(dart.nullable(ui.Size)))(),
    MaterialStatePropertyOfSizeN: () => (T$.MaterialStatePropertyOfSizeN = dart.constFn(material_state.MaterialStateProperty$(T$.SizeN())))(),
    MaterialStatePropertyNOfSizeN: () => (T$.MaterialStatePropertyNOfSizeN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfSizeN())))(),
    ButtonStyleNToMaterialStatePropertyNOfSizeN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfSizeN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfSizeN(), [T$.ButtonStyleN()])))(),
    BorderSideN: () => (T$.BorderSideN = dart.constFn(dart.nullable(borders.BorderSide)))(),
    MaterialStatePropertyOfBorderSideN: () => (T$.MaterialStatePropertyOfBorderSideN = dart.constFn(material_state.MaterialStateProperty$(T$.BorderSideN())))(),
    MaterialStatePropertyNOfBorderSideN: () => (T$.MaterialStatePropertyNOfBorderSideN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfBorderSideN())))(),
    ButtonStyleNToMaterialStatePropertyNOfBorderSideN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfBorderSideN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfBorderSideN(), [T$.ButtonStyleN()])))(),
    OutlinedBorderN: () => (T$.OutlinedBorderN = dart.constFn(dart.nullable(borders.OutlinedBorder)))(),
    MaterialStatePropertyOfOutlinedBorderN: () => (T$.MaterialStatePropertyOfOutlinedBorderN = dart.constFn(material_state.MaterialStateProperty$(T$.OutlinedBorderN())))(),
    MaterialStatePropertyNOfOutlinedBorderN: () => (T$.MaterialStatePropertyNOfOutlinedBorderN = dart.constFn(dart.nullable(T$.MaterialStatePropertyOfOutlinedBorderN())))(),
    ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN: () => (T$.ButtonStyleNToMaterialStatePropertyNOfOutlinedBorderN = dart.constFn(dart.fnType(T$.MaterialStatePropertyNOfOutlinedBorderN(), [T$.ButtonStyleN()])))(),
    MouseCursorN: () => (T$.MouseCursorN = dart.constFn(dart.nullable(mouse_cursor.MouseCursor)))(),
    ButtonStyleNToMouseCursorN: () => (T$.ButtonStyleNToMouseCursorN = dart.constFn(dart.fnType(T$.MouseCursorN(), [T$.ButtonStyleN()])))(),
    SetOfMaterialState: () => (T$.SetOfMaterialState = dart.constFn(core.Set$(material_state.MaterialState)))(),
    SetOfMaterialStateToMouseCursorN: () => (T$.SetOfMaterialStateToMouseCursorN = dart.constFn(dart.fnType(T$.MouseCursorN(), [T$.SetOfMaterialState()])))(),
    ButtonStyleNToColorN: () => (T$.ButtonStyleNToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.ButtonStyleN()])))(),
    SetOfMaterialStateToColorN: () => (T$.SetOfMaterialStateToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.SetOfMaterialState()])))(),
    VisualDensityN: () => (T$.VisualDensityN = dart.constFn(dart.nullable(theme_data.VisualDensity)))(),
    ButtonStyleNToVisualDensityN: () => (T$.ButtonStyleNToVisualDensityN = dart.constFn(dart.fnType(T$.VisualDensityN(), [T$.ButtonStyleN()])))(),
    MaterialTapTargetSizeN: () => (T$.MaterialTapTargetSizeN = dart.constFn(dart.nullable(theme_data.MaterialTapTargetSize)))(),
    ButtonStyleNToMaterialTapTargetSizeN: () => (T$.ButtonStyleNToMaterialTapTargetSizeN = dart.constFn(dart.fnType(T$.MaterialTapTargetSizeN(), [T$.ButtonStyleN()])))(),
    DurationN: () => (T$.DurationN = dart.constFn(dart.nullable(core.Duration)))(),
    ButtonStyleNToDurationN: () => (T$.ButtonStyleNToDurationN = dart.constFn(dart.fnType(T$.DurationN(), [T$.ButtonStyleN()])))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    ButtonStyleNToboolN: () => (T$.ButtonStyleNToboolN = dart.constFn(dart.fnType(T$.boolN(), [T$.ButtonStyleN()])))(),
    AlignmentGeometryN: () => (T$.AlignmentGeometryN = dart.constFn(dart.nullable(alignment.AlignmentGeometry)))(),
    ButtonStyleNToAlignmentGeometryN: () => (T$.ButtonStyleNToAlignmentGeometryN = dart.constFn(dart.fnType(T$.AlignmentGeometryN(), [T$.ButtonStyleN()])))(),
    AnimationStatusTovoid: () => (T$.AnimationStatusTovoid = dart.constFn(dart.fnType(dart.void, [animation.AnimationStatus])))(),
    RenderBoxAndBoxConstraintsToSize: () => (T$.RenderBoxAndBoxConstraintsToSize = dart.constFn(dart.fnType(ui.Size, [box$.RenderBox, box$.BoxConstraints])))(),
    OffsetN: () => (T$.OffsetN = dart.constFn(dart.nullable(ui.Offset)))(),
    BoxHitTestResultAndOffsetNTobool: () => (T$.BoxHitTestResultAndOffsetNTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, T$.OffsetN()])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    SnackBarClosedReasonL: () => (T$.SnackBarClosedReasonL = dart.constFn(dart.legacy(snack_bar.SnackBarClosedReason)))(),
    StringL: () => (T$.StringL = dart.constFn(dart.legacy(core.String)))(),
    ValueKeyOfStringL: () => (T$.ValueKeyOfStringL = dart.constFn(key.ValueKey$(T$.StringL())))(),
    DismissDirectionTovoid: () => (T$.DismissDirectionTovoid = dart.constFn(dart.fnType(dart.void, [dismissible.DismissDirection])))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    BuildContextAndWidgetNToAlign: () => (T$.BuildContextAndWidgetNToAlign = dart.constFn(dart.fnType(basic.Align, [framework.BuildContext, T$.WidgetN()])))(),
    _AnimationSwapOfdouble: () => (T$._AnimationSwapOfdouble = dart.constFn(floating_action_button_location._AnimationSwap$(core.double)))(),
    ObjectFlagPropertyOfObject: () => (T$.ObjectFlagPropertyOfObject = dart.constFn(diagnostics.ObjectFlagProperty$(core.Object)))(),
    DiagnosticsPropertyOfShapeBorder: () => (T$.DiagnosticsPropertyOfShapeBorder = dart.constFn(diagnostics.DiagnosticsProperty$(borders.ShapeBorder)))(),
    DiagnosticsPropertyOfMaterialTapTargetSize: () => (T$.DiagnosticsPropertyOfMaterialTapTargetSize = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.MaterialTapTargetSize)))(),
    CollapseModeL: () => (T$.CollapseModeL = dart.constFn(dart.legacy(flexible_space_bar.CollapseMode)))(),
    StretchModeL: () => (T$.StretchModeL = dart.constFn(dart.legacy(flexible_space_bar.StretchMode)))(),
    BuildContextAndBoxConstraintsToContainer: () => (T$.BuildContextAndBoxConstraintsToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, box$.BoxConstraints])))(),
    BuildContextAndBoxConstraintsToClipRect: () => (T$.BuildContextAndBoxConstraintsToClipRect = dart.constFn(dart.fnType(basic.ClipRect, [framework.BuildContext, box$.BoxConstraints])))(),
    ListTileStyleL: () => (T$.ListTileStyleL = dart.constFn(dart.legacy(list_tile.ListTileStyle)))(),
    BuildContextToListTileTheme: () => (T$.BuildContextToListTileTheme = dart.constFn(dart.fnType(list_tile.ListTileTheme, [framework.BuildContext])))(),
    ListTileControlAffinityL: () => (T$.ListTileControlAffinityL = dart.constFn(dart.legacy(list_tile.ListTileControlAffinity)))(),
    SyncIterableOfWidget: () => (T$.SyncIterableOfWidget = dart.constFn(_js_helper.SyncIterable$(framework.Widget)))(),
    _ListTileSlotL: () => (T$._ListTileSlotL = dart.constFn(dart.legacy(list_tile._ListTileSlot)))(),
    LinkedMapOf_ListTileSlot$Element: () => (T$.LinkedMapOf_ListTileSlot$Element = dart.constFn(_js_helper.LinkedMap$(list_tile._ListTileSlot, framework.Element)))(),
    LinkedMapOf_ListTileSlot$RenderBox: () => (T$.LinkedMapOf_ListTileSlot$RenderBox = dart.constFn(_js_helper.LinkedMap$(list_tile._ListTileSlot, box$.RenderBox)))(),
    SyncIterableOfRenderBox: () => (T$.SyncIterableOfRenderBox = dart.constFn(_js_helper.SyncIterable$(box$.RenderBox)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    RenderBoxN: () => (T$.RenderBoxN = dart.constFn(dart.nullable(box$.RenderBox)))(),
    RenderBoxNAndStringTovoid: () => (T$.RenderBoxNAndStringTovoid = dart.constFn(dart.fnType(dart.void, [T$.RenderBoxN(), core.String])))(),
    RenderBoxNTovoid: () => (T$.RenderBoxNTovoid = dart.constFn(dart.fnType(dart.void, [T$.RenderBoxN()])))(),
    BoxHitTestResultAndOffsetTobool: () => (T$.BoxHitTestResultAndOffsetTobool = dart.constFn(dart.fnType(core.bool, [box$.BoxHitTestResult, ui.Offset])))(),
    DrawerAlignmentL: () => (T$.DrawerAlignmentL = dart.constFn(dart.legacy(drawer.DrawerAlignment)))(),
    StateOfStatefulWidget: () => (T$.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T$.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T$.StateOfStatefulWidget())))(),
    AnimationOfdouble: () => (T$.AnimationOfdouble = dart.constFn(animation.Animation$(core.double)))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdoubleToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble()])))(),
    BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget: () => (T$.BuildContextAndAnimationOfdoubleAndAnimationOfdouble__ToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AnimationOfdouble(), T$.AnimationOfdouble(), framework.Widget])))(),
    DiagnosticsPropertyOfdouble: () => (T$.DiagnosticsPropertyOfdouble = dart.constFn(diagnostics.DiagnosticsProperty$(core.double)))(),
    DiagnosticsPropertyOfButtonTextTheme: () => (T$.DiagnosticsPropertyOfButtonTextTheme = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonTextTheme)))(),
    DiagnosticsPropertyOfBrightness: () => (T$.DiagnosticsPropertyOfBrightness = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Brightness)))(),
    DiagnosticsPropertyOfVisualDensity: () => (T$.DiagnosticsPropertyOfVisualDensity = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.VisualDensity)))(),
    DiagnosticsPropertyOfBorderSide: () => (T$.DiagnosticsPropertyOfBorderSide = dart.constFn(diagnostics.DiagnosticsProperty$(borders.BorderSide)))(),
    BuildContextAndWidgetNToRaisedButton: () => (T$.BuildContextAndWidgetNToRaisedButton = dart.constFn(dart.fnType(raised_button.RaisedButton, [framework.BuildContext, T$.WidgetN()])))(),
    ShapeBorderN: () => (T$.ShapeBorderN = dart.constFn(dart.nullable(borders.ShapeBorder)))(),
    DiagnosticsPropertyOfBoxConstraints: () => (T$.DiagnosticsPropertyOfBoxConstraints = dart.constFn(diagnostics.DiagnosticsProperty$(box$.BoxConstraints)))(),
    DiagnosticsPropertyOfBorderRadius: () => (T$.DiagnosticsPropertyOfBorderRadius = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadius)))(),
    DiagnosticsPropertyOfTextStyle: () => (T$.DiagnosticsPropertyOfTextStyle = dart.constFn(diagnostics.DiagnosticsProperty$(text_style.TextStyle)))(),
    DiagnosticsPropertyOfInputDecorationTheme: () => (T$.DiagnosticsPropertyOfInputDecorationTheme = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.InputDecorationTheme)))(),
    TabBarIndicatorSizeL: () => (T$.TabBarIndicatorSizeL = dart.constFn(dart.legacy(tabs$.TabBarIndicatorSize)))(),
    JSArrayOfdouble: () => (T$.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))(),
    WidgetL: () => (T$.WidgetL = dart.constFn(dart.legacy(framework.Widget)))(),
    WidgetToGlobalKeyOfStateOfStatefulWidget: () => (T$.WidgetToGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(T$.GlobalKeyOfStateOfStatefulWidget(), [framework.Widget])))(),
    ListOfGlobalKeyOfStateOfStatefulWidget: () => (T$.ListOfGlobalKeyOfStateOfStatefulWidget = dart.constFn(core.List$(T$.GlobalKeyOfStateOfStatefulWidget())))(),
    intToGlobalKeyOfStateOfStatefulWidget: () => (T$.intToGlobalKeyOfStateOfStatefulWidget = dart.constFn(dart.fnType(T$.GlobalKeyOfStateOfStatefulWidget(), [core.int])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    NotificationListenerOfScrollNotification: () => (T$.NotificationListenerOfScrollNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollNotification)))(),
    intToWidget: () => (T$.intToWidget = dart.constFn(dart.fnType(framework.Widget, [core.int])))(),
    BuildContextAndWidgetNToSemantics: () => (T$.BuildContextAndWidgetNToSemantics = dart.constFn(dart.fnType(basic.Semantics, [framework.BuildContext, T$.WidgetN()])))(),
    ColorNAndColorNAnddoubleToColorN: () => (T$.ColorNAndColorNAnddoubleToColorN = dart.constFn(dart.fnType(T$.ColorN(), [T$.ColorN(), T$.ColorN(), core.double])))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfColorN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfColorN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfColorN())))(),
    MaterialStatePropertyOfMouseCursorN: () => (T$.MaterialStatePropertyOfMouseCursorN = dart.constFn(material_state.MaterialStateProperty$(T$.MouseCursorN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfMouseCursorN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfMouseCursorN())))(),
    SnackBarBehaviorL: () => (T$.SnackBarBehaviorL = dart.constFn(dart.legacy(snack_bar_theme.SnackBarBehavior)))(),
    DiagnosticsPropertyOfSnackBarBehavior: () => (T$.DiagnosticsPropertyOfSnackBarBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(snack_bar_theme.SnackBarBehavior)))(),
    ShowValueIndicatorL: () => (T$.ShowValueIndicatorL = dart.constFn(dart.legacy(slider_theme.ShowValueIndicator)))(),
    ThumbL: () => (T$.ThumbL = dart.constFn(dart.legacy(slider_theme.Thumb)))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    DiagnosticsPropertyOfSliderComponentShape: () => (T$.DiagnosticsPropertyOfSliderComponentShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderComponentShape)))(),
    DiagnosticsPropertyOfSliderTickMarkShape: () => (T$.DiagnosticsPropertyOfSliderTickMarkShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderTickMarkShape)))(),
    DiagnosticsPropertyOfSliderTrackShape: () => (T$.DiagnosticsPropertyOfSliderTrackShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderTrackShape)))(),
    DiagnosticsPropertyOfRangeSliderTickMarkShape: () => (T$.DiagnosticsPropertyOfRangeSliderTickMarkShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderTickMarkShape)))(),
    DiagnosticsPropertyOfRangeSliderThumbShape: () => (T$.DiagnosticsPropertyOfRangeSliderThumbShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderThumbShape)))(),
    DiagnosticsPropertyOfRangeSliderTrackShape: () => (T$.DiagnosticsPropertyOfRangeSliderTrackShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderTrackShape)))(),
    DiagnosticsPropertyOfRangeSliderValueIndicatorShape: () => (T$.DiagnosticsPropertyOfRangeSliderValueIndicatorShape = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.RangeSliderValueIndicatorShape)))(),
    EnumPropertyOfShowValueIndicator: () => (T$.EnumPropertyOfShowValueIndicator = dart.constFn(diagnostics.EnumProperty$(slider_theme.ShowValueIndicator)))(),
    ThumbN: () => (T$.ThumbN = dart.constFn(dart.nullable(slider_theme.Thumb)))(),
    TextDirectionAndRangeValuesAnddouble__ToThumbN: () => (T$.TextDirectionAndRangeValuesAnddouble__ToThumbN = dart.constFn(dart.fnType(T$.ThumbN(), [ui.TextDirection, slider_theme.RangeValues, core.double, ui.Size, ui.Size, core.double])))(),
    DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN: () => (T$.DiagnosticsPropertyOfTextDirectionAndRangeValuesAnddouble__ToThumbN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.TextDirectionAndRangeValuesAnddouble__ToThumbN())))(),
    numN: () => (T$.numN = dart.constFn(dart.nullable(core.num)))(),
    numNAndnumNAnddoubleTodoubleN: () => (T$.numNAndnumNAnddoubleTodoubleN = dart.constFn(dart.fnType(T$.doubleN(), [T$.numN(), T$.numN(), core.double])))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfdoubleN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfdoubleN())))(),
    DiagnosticsPropertyOfbool: () => (T$.DiagnosticsPropertyOfbool = dart.constFn(diagnostics.DiagnosticsProperty$(core.bool)))(),
    DiagnosticsPropertyOfRadius: () => (T$.DiagnosticsPropertyOfRadius = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Radius)))(),
    TweenOfOffset: () => (T$.TweenOfOffset = dart.constFn(tween.Tween$(ui.Offset)))(),
    BuildContextAndWidgetNToContainer: () => (T$.BuildContextAndWidgetNToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndWidgetNToFractionalTranslation: () => (T$.BuildContextAndWidgetNToFractionalTranslation = dart.constFn(dart.fnType(basic.FractionalTranslation, [framework.BuildContext, T$.WidgetN()])))(),
    BuildContextAndBoxConstraintsToAnimatedBuilder: () => (T$.BuildContextAndBoxConstraintsToAnimatedBuilder = dart.constFn(dart.fnType(transitions.AnimatedBuilder, [framework.BuildContext, box$.BoxConstraints])))(),
    BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition: () => (T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomEnterTransition = dart.constFn(dart.fnType(page_transitions_theme._ZoomEnterTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.WidgetN()])))(),
    BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition: () => (T$.BuildContextAndAnimationOfdoubleAndWidgetNTo_ZoomExitTransition = dart.constFn(dart.fnType(page_transitions_theme._ZoomExitTransition, [framework.BuildContext, T$.AnimationOfdouble(), T$.WidgetN()])))(),
    TweenSequenceItemOfdouble: () => (T$.TweenSequenceItemOfdouble = dart.constFn(tween_sequence.TweenSequenceItem$(core.double)))(),
    JSArrayOfTweenSequenceItemOfdouble: () => (T$.JSArrayOfTweenSequenceItemOfdouble = dart.constFn(_interceptors.JSArray$(T$.TweenSequenceItemOfdouble())))(),
    TweenSequenceOfdouble: () => (T$.TweenSequenceOfdouble = dart.constFn(tween_sequence.TweenSequence$(core.double)))(),
    TweenOfdoubleN: () => (T$.TweenOfdoubleN = dart.constFn(tween.Tween$(T$.doubleN())))(),
    PageTransitionsBuilderN: () => (T$.PageTransitionsBuilderN = dart.constFn(dart.nullable(page_transitions_theme.PageTransitionsBuilder)))(),
    TargetPlatformToPageTransitionsBuilderN: () => (T$.TargetPlatformToPageTransitionsBuilderN = dart.constFn(dart.fnType(T$.PageTransitionsBuilderN(), [platform$.TargetPlatform])))(),
    MapOfTargetPlatform$PageTransitionsBuilder: () => (T$.MapOfTargetPlatform$PageTransitionsBuilder = dart.constFn(core.Map$(platform$.TargetPlatform, page_transitions_theme.PageTransitionsBuilder)))(),
    DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder: () => (T$.DiagnosticsPropertyOfMapOfTargetPlatform$PageTransitionsBuilder = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MapOfTargetPlatform$PageTransitionsBuilder())))(),
    TargetPlatformL: () => (T$.TargetPlatformL = dart.constFn(dart.legacy(platform$.TargetPlatform)))(),
    PageTransitionsBuilderL: () => (T$.PageTransitionsBuilderL = dart.constFn(dart.legacy(page_transitions_theme.PageTransitionsBuilder)))(),
    ListOfAnimationController: () => (T$.ListOfAnimationController = dart.constFn(core.List$(animation_controller.AnimationController)))(),
    intToAnimationController: () => (T$.intToAnimationController = dart.constFn(dart.fnType(animation_controller.AnimationController, [core.int])))(),
    AnimationControllerToAnimationOfdouble: () => (T$.AnimationControllerToAnimationOfdouble = dart.constFn(dart.fnType(T$.AnimationOfdouble(), [animation_controller.AnimationController])))(),
    boolTovoid: () => (T$.boolTovoid = dart.constFn(dart.fnType(dart.void, [core.bool])))(),
    NavigationRailLabelTypeL: () => (T$.NavigationRailLabelTypeL = dart.constFn(dart.legacy(navigation_rail.NavigationRailLabelType)))(),
    DiagnosticsPropertyOfIconThemeData: () => (T$.DiagnosticsPropertyOfIconThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(icon_theme_data.IconThemeData)))(),
    DiagnosticsPropertyOfNavigationRailLabelType: () => (T$.DiagnosticsPropertyOfNavigationRailLabelType = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_rail.NavigationRailLabelType)))(),
    JSArrayOfListenable: () => (T$.JSArrayOfListenable = dart.constFn(_interceptors.JSArray$(change_notifier.Listenable)))(),
    FloatingLabelBehaviorL: () => (T$.FloatingLabelBehaviorL = dart.constFn(dart.legacy(input_decorator.FloatingLabelBehavior)))(),
    _DecorationSlotL: () => (T$._DecorationSlotL = dart.constFn(dart.legacy(input_decorator._DecorationSlot)))(),
    LinkedMapOf_DecorationSlot$RenderBox: () => (T$.LinkedMapOf_DecorationSlot$RenderBox = dart.constFn(_js_helper.LinkedMap$(input_decorator._DecorationSlot, box$.RenderBox)))(),
    LinkedMapOfRenderBoxN$double: () => (T$.LinkedMapOfRenderBoxN$double = dart.constFn(_js_helper.LinkedMap$(T$.RenderBoxN(), core.double)))(),
    JSArrayOfRenderBoxN: () => (T$.JSArrayOfRenderBoxN = dart.constFn(_interceptors.JSArray$(T$.RenderBoxN())))(),
    RenderBoxAnddoubleTodouble: () => (T$.RenderBoxAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [box$.RenderBox, core.double])))(),
    LinkedMapOf_DecorationSlot$Element: () => (T$.LinkedMapOf_DecorationSlot$Element = dart.constFn(_js_helper.LinkedMap$(input_decorator._DecorationSlot, framework.Element)))(),
    DiagnosticsPropertyOfInputDecoration: () => (T$.DiagnosticsPropertyOfInputDecoration = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.InputDecoration)))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    DiagnosticsPropertyOfFloatingLabelBehavior: () => (T$.DiagnosticsPropertyOfFloatingLabelBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(input_decorator.FloatingLabelBehavior)))(),
    DiagnosticsPropertyOfInputBorder: () => (T$.DiagnosticsPropertyOfInputBorder = dart.constFn(diagnostics.DiagnosticsProperty$(input_border.InputBorder)))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfTextStyleN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfTextStyleN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfEdgeInsetsGeometryN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfEdgeInsetsGeometryN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfSizeN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfSizeN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfSizeN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfBorderSideN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfBorderSideN())))(),
    DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN: () => (T$.DiagnosticsPropertyOfMaterialStatePropertyOfOutlinedBorderN = dart.constFn(diagnostics.DiagnosticsProperty$(T$.MaterialStatePropertyOfOutlinedBorderN())))(),
    EnumPropertyOfMaterialTapTargetSize: () => (T$.EnumPropertyOfMaterialTapTargetSize = dart.constFn(diagnostics.EnumProperty$(theme_data.MaterialTapTargetSize)))(),
    DiagnosticsPropertyOfDuration: () => (T$.DiagnosticsPropertyOfDuration = dart.constFn(diagnostics.DiagnosticsProperty$(core.Duration)))(),
    DiagnosticsPropertyOfAlignmentGeometry: () => (T$.DiagnosticsPropertyOfAlignmentGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(alignment.AlignmentGeometry)))(),
    TextStyleNAndTextStyleNAnddoubleToTextStyleN: () => (T$.TextStyleNAndTextStyleNAnddoubleToTextStyleN = dart.constFn(dart.fnType(T$.TextStyleN(), [T$.TextStyleN(), T$.TextStyleN(), core.double])))(),
    EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN: () => (T$.EdgeInsetsGeometryNAndEdgeInsetsGeometryNAnddoubleToEdgeInsetsGeometryN = dart.constFn(dart.fnType(T$.EdgeInsetsGeometryN(), [T$.EdgeInsetsGeometryN(), T$.EdgeInsetsGeometryN(), core.double])))(),
    SizeNAndSizeNAnddoubleToSizeN: () => (T$.SizeNAndSizeNAnddoubleToSizeN = dart.constFn(dart.fnType(T$.SizeN(), [T$.SizeN(), T$.SizeN(), core.double])))(),
    DiagnosticsPropertyOfDecoration: () => (T$.DiagnosticsPropertyOfDecoration = dart.constFn(diagnostics.DiagnosticsProperty$(decoration.Decoration)))(),
    EnumPropertyOfBrightness: () => (T$.EnumPropertyOfBrightness = dart.constFn(diagnostics.EnumProperty$(ui.Brightness)))(),
    DiagnosticsPropertyOfClip: () => (T$.DiagnosticsPropertyOfClip = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Clip)))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    PointerEnterEventTovoid: () => (T$.PointerEnterEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerEnterEvent])))(),
    PointerExitEventTovoid: () => (T$.PointerExitEventTovoid = dart.constFn(dart.fnType(dart.void, [events.PointerExitEvent])))(),
    IterablePropertyOfString: () => (T$.IterablePropertyOfString = dart.constFn(diagnostics.IterableProperty$(core.String)))(),
    DiagnosticsPropertyOfMouseCursor: () => (T$.DiagnosticsPropertyOfMouseCursor = dart.constFn(diagnostics.DiagnosticsProperty$(mouse_cursor.MouseCursor)))(),
    DiagnosticsPropertyOfBoxShape: () => (T$.DiagnosticsPropertyOfBoxShape = dart.constFn(diagnostics.DiagnosticsProperty$(box_border.BoxShape)))(),
    _HighlightTypeL: () => (T$._HighlightTypeL = dart.constFn(dart.legacy(ink_well._HighlightType)))(),
    InkHighlightN: () => (T$.InkHighlightN = dart.constFn(dart.nullable(ink_highlight.InkHighlight)))(),
    LinkedMapOf_HighlightType$InkHighlightN: () => (T$.LinkedMapOf_HighlightType$InkHighlightN = dart.constFn(_js_helper.LinkedMap$(ink_well._HighlightType, T$.InkHighlightN())))(),
    ObserverListOf_ParentInkResponseState: () => (T$.ObserverListOf_ParentInkResponseState = dart.constFn(observer_list.ObserverList$(ink_well._ParentInkResponseState)))(),
    CallbackActionOfActivateIntent: () => (T$.CallbackActionOfActivateIntent = dart.constFn(actions.CallbackAction$(actions.ActivateIntent)))(),
    CallbackActionOfButtonActivateIntent: () => (T$.CallbackActionOfButtonActivateIntent = dart.constFn(actions.CallbackAction$(actions.ButtonActivateIntent)))(),
    ActionOfIntent: () => (T$.ActionOfIntent = dart.constFn(actions.Action$(actions.Intent)))(),
    LinkedMapOfType$ActionOfIntent: () => (T$.LinkedMapOfType$ActionOfIntent = dart.constFn(_js_helper.LinkedMap$(core.Type, T$.ActionOfIntent())))(),
    InkHighlightNTobool: () => (T$.InkHighlightNTobool = dart.constFn(dart.fnType(core.bool, [T$.InkHighlightN()])))(),
    MaterialStateL: () => (T$.MaterialStateL = dart.constFn(dart.legacy(material_state.MaterialState)))(),
    _HashSetOfInteractiveInkFeature: () => (T$._HashSetOfInteractiveInkFeature = dart.constFn(collection._HashSet$(ink_well.InteractiveInkFeature)))(),
    BottomNavigationBarTypeL: () => (T$.BottomNavigationBarTypeL = dart.constFn(dart.legacy(bottom_navigation_bar.BottomNavigationBarType)))(),
    BottomNavigationBarItemTobool: () => (T$.BottomNavigationBarItemTobool = dart.constFn(dart.fnType(core.bool, [bottom_navigation_bar_item.BottomNavigationBarItem])))(),
    JSArrayOfAnimationController: () => (T$.JSArrayOfAnimationController = dart.constFn(_interceptors.JSArray$(animation_controller.AnimationController)))(),
    ListQueueOf_Circle: () => (T$.ListQueueOf_Circle = dart.constFn(collection.ListQueue$(bottom_navigation_bar._Circle)))(),
    ListOfCurvedAnimation: () => (T$.ListOfCurvedAnimation = dart.constFn(core.List$(animations.CurvedAnimation)))(),
    intToCurvedAnimation: () => (T$.intToCurvedAnimation = dart.constFn(dart.fnType(animations.CurvedAnimation, [core.int])))(),
    doubleAnddoubleTodouble: () => (T$.doubleAnddoubleTodouble = dart.constFn(dart.fnType(core.double, [core.double, core.double])))(),
    IterableOfAnimationOfdouble: () => (T$.IterableOfAnimationOfdouble = dart.constFn(core.Iterable$(T$.AnimationOfdouble())))(),
    IterableOfAnimationOfdoubleTodouble: () => (T$.IterableOfAnimationOfdoubleTodouble = dart.constFn(dart.fnType(core.double, [T$.IterableOfAnimationOfdouble()])))(),
    DiagnosticsPropertyOfBottomNavigationBarType: () => (T$.DiagnosticsPropertyOfBottomNavigationBarType = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar.BottomNavigationBarType)))(),
    DiagnosticsPropertyOfNotchedShape: () => (T$.DiagnosticsPropertyOfNotchedShape = dart.constFn(diagnostics.DiagnosticsProperty$(notched_shapes.NotchedShape)))(),
    MaterialTapTargetSizeL: () => (T$.MaterialTapTargetSizeL = dart.constFn(dart.legacy(theme_data.MaterialTapTargetSize)))(),
    VoidToThemeData: () => (T$.VoidToThemeData = dart.constFn(dart.fnType(theme_data.ThemeData, [])))(),
    EnumPropertyOfTargetPlatform: () => (T$.EnumPropertyOfTargetPlatform = dart.constFn(diagnostics.EnumProperty$(platform$.TargetPlatform)))(),
    DiagnosticsPropertyOfButtonThemeData: () => (T$.DiagnosticsPropertyOfButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonThemeData)))(),
    DiagnosticsPropertyOfToggleButtonsThemeData: () => (T$.DiagnosticsPropertyOfToggleButtonsThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(toggle_buttons_theme.ToggleButtonsThemeData)))(),
    DiagnosticsPropertyOfTextTheme: () => (T$.DiagnosticsPropertyOfTextTheme = dart.constFn(diagnostics.DiagnosticsProperty$(text_theme.TextTheme)))(),
    DiagnosticsPropertyOfSliderThemeData: () => (T$.DiagnosticsPropertyOfSliderThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(slider_theme.SliderThemeData)))(),
    DiagnosticsPropertyOfTabBarTheme: () => (T$.DiagnosticsPropertyOfTabBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(tab_bar_theme.TabBarTheme)))(),
    DiagnosticsPropertyOfTooltipThemeData: () => (T$.DiagnosticsPropertyOfTooltipThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(tooltip_theme.TooltipThemeData)))(),
    DiagnosticsPropertyOfCardTheme: () => (T$.DiagnosticsPropertyOfCardTheme = dart.constFn(diagnostics.DiagnosticsProperty$(card_theme.CardTheme)))(),
    DiagnosticsPropertyOfChipThemeData: () => (T$.DiagnosticsPropertyOfChipThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(chip_theme.ChipThemeData)))(),
    DiagnosticsPropertyOfPageTransitionsTheme: () => (T$.DiagnosticsPropertyOfPageTransitionsTheme = dart.constFn(diagnostics.DiagnosticsProperty$(page_transitions_theme.PageTransitionsTheme)))(),
    DiagnosticsPropertyOfAppBarTheme: () => (T$.DiagnosticsPropertyOfAppBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(app_bar_theme.AppBarTheme)))(),
    DiagnosticsPropertyOfScrollbarThemeData: () => (T$.DiagnosticsPropertyOfScrollbarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(scrollbar_theme.ScrollbarThemeData)))(),
    DiagnosticsPropertyOfBottomAppBarTheme: () => (T$.DiagnosticsPropertyOfBottomAppBarTheme = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_app_bar_theme.BottomAppBarTheme)))(),
    DiagnosticsPropertyOfColorScheme: () => (T$.DiagnosticsPropertyOfColorScheme = dart.constFn(diagnostics.DiagnosticsProperty$(color_scheme.ColorScheme)))(),
    DiagnosticsPropertyOfDialogTheme: () => (T$.DiagnosticsPropertyOfDialogTheme = dart.constFn(diagnostics.DiagnosticsProperty$(dialog_theme.DialogTheme)))(),
    DiagnosticsPropertyOfFloatingActionButtonThemeData: () => (T$.DiagnosticsPropertyOfFloatingActionButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(floating_action_button_theme.FloatingActionButtonThemeData)))(),
    DiagnosticsPropertyOfNavigationRailThemeData: () => (T$.DiagnosticsPropertyOfNavigationRailThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(navigation_rail_theme.NavigationRailThemeData)))(),
    DiagnosticsPropertyOfTypography: () => (T$.DiagnosticsPropertyOfTypography = dart.constFn(diagnostics.DiagnosticsProperty$(typography$.Typography)))(),
    DiagnosticsPropertyOfNoDefaultCupertinoThemeData: () => (T$.DiagnosticsPropertyOfNoDefaultCupertinoThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(theme.NoDefaultCupertinoThemeData)))(),
    DiagnosticsPropertyOfSnackBarThemeData: () => (T$.DiagnosticsPropertyOfSnackBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(snack_bar_theme.SnackBarThemeData)))(),
    DiagnosticsPropertyOfBottomSheetThemeData: () => (T$.DiagnosticsPropertyOfBottomSheetThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_sheet_theme.BottomSheetThemeData)))(),
    DiagnosticsPropertyOfPopupMenuThemeData: () => (T$.DiagnosticsPropertyOfPopupMenuThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(popup_menu_theme.PopupMenuThemeData)))(),
    DiagnosticsPropertyOfMaterialBannerThemeData: () => (T$.DiagnosticsPropertyOfMaterialBannerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(banner_theme.MaterialBannerThemeData)))(),
    DiagnosticsPropertyOfDividerThemeData: () => (T$.DiagnosticsPropertyOfDividerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(divider_theme.DividerThemeData)))(),
    DiagnosticsPropertyOfButtonBarThemeData: () => (T$.DiagnosticsPropertyOfButtonBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(button_bar_theme.ButtonBarThemeData)))(),
    DiagnosticsPropertyOfTimePickerThemeData: () => (T$.DiagnosticsPropertyOfTimePickerThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(time_picker_theme.TimePickerThemeData)))(),
    DiagnosticsPropertyOfTextSelectionThemeData: () => (T$.DiagnosticsPropertyOfTextSelectionThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(text_selection_theme.TextSelectionThemeData)))(),
    DiagnosticsPropertyOfBottomNavigationBarThemeData: () => (T$.DiagnosticsPropertyOfBottomNavigationBarThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(bottom_navigation_bar_theme.BottomNavigationBarThemeData)))(),
    DiagnosticsPropertyOfTextButtonThemeData: () => (T$.DiagnosticsPropertyOfTextButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(text_button_theme.TextButtonThemeData)))(),
    DiagnosticsPropertyOfElevatedButtonThemeData: () => (T$.DiagnosticsPropertyOfElevatedButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(elevated_button_theme.ElevatedButtonThemeData)))(),
    DiagnosticsPropertyOfOutlinedButtonThemeData: () => (T$.DiagnosticsPropertyOfOutlinedButtonThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(outlined_button_theme.OutlinedButtonThemeData)))(),
    DiagnosticsPropertyOfDataTableThemeData: () => (T$.DiagnosticsPropertyOfDataTableThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(data_table_theme.DataTableThemeData)))(),
    DiagnosticsPropertyOfCheckboxThemeData: () => (T$.DiagnosticsPropertyOfCheckboxThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(checkbox_theme.CheckboxThemeData)))(),
    DiagnosticsPropertyOfRadioThemeData: () => (T$.DiagnosticsPropertyOfRadioThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(radio_theme.RadioThemeData)))(),
    DiagnosticsPropertyOfSwitchThemeData: () => (T$.DiagnosticsPropertyOfSwitchThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(switch_theme.SwitchThemeData)))(),
    _FifoCacheOf_IdentityThemeDataCacheKey$ThemeData: () => (T$._FifoCacheOf_IdentityThemeDataCacheKey$ThemeData = dart.constFn(theme_data._FifoCache$(theme_data._IdentityThemeDataCacheKey, theme_data.ThemeData)))(),
    intL: () => (T$.intL = dart.constFn(dart.legacy(core.int)))(),
    ColorL: () => (T$.ColorL = dart.constFn(dart.legacy(ui.Color)))(),
    ButtonTextThemeL: () => (T$.ButtonTextThemeL = dart.constFn(dart.legacy(button_theme.ButtonTextTheme)))(),
    ButtonBarLayoutBehaviorL: () => (T$.ButtonBarLayoutBehaviorL = dart.constFn(dart.legacy(button_theme.ButtonBarLayoutBehavior)))(),
    EnumPropertyOfButtonTextTheme: () => (T$.EnumPropertyOfButtonTextTheme = dart.constFn(diagnostics.EnumProperty$(button_theme.ButtonTextTheme)))(),
    DiagnosticsPropertyOfMainAxisAlignment: () => (T$.DiagnosticsPropertyOfMainAxisAlignment = dart.constFn(diagnostics.DiagnosticsProperty$(flex.MainAxisAlignment)))(),
    DiagnosticsPropertyOfMainAxisSize: () => (T$.DiagnosticsPropertyOfMainAxisSize = dart.constFn(diagnostics.DiagnosticsProperty$(flex.MainAxisSize)))(),
    DiagnosticsPropertyOfButtonBarLayoutBehavior: () => (T$.DiagnosticsPropertyOfButtonBarLayoutBehavior = dart.constFn(diagnostics.DiagnosticsProperty$(button_theme.ButtonBarLayoutBehavior)))(),
    DiagnosticsPropertyOfVerticalDirection: () => (T$.DiagnosticsPropertyOfVerticalDirection = dart.constFn(diagnostics.DiagnosticsProperty$(basic_types.VerticalDirection)))(),
    WidgetToPadding: () => (T$.WidgetToPadding = dart.constFn(dart.fnType(basic.Padding, [framework.Widget])))(),
    NotificationListenerOfDraggableScrollableNotification: () => (T$.NotificationListenerOfDraggableScrollableNotification = dart.constFn(notification_listener.NotificationListener$(draggable_scrollable_sheet.DraggableScrollableNotification)))(),
    _ScaffoldSlotL: () => (T$._ScaffoldSlotL = dart.constFn(dart.legacy(scaffold$._ScaffoldSlot)))(),
    _HashSetOfScaffoldState: () => (T$._HashSetOfScaffoldState = dart.constFn(collection._HashSet$(scaffold$.ScaffoldState)))(),
    ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(scaffold$.ScaffoldFeatureController$(snack_bar.SnackBar, snack_bar.SnackBarClosedReason)))(),
    ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.ListQueueOfScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(collection.ListQueue$(T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason())))(),
    VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason: () => (T$.VoidToScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason = dart.constFn(dart.fnType(T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason(), [])))(),
    ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic: () => (T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReasonTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ScaffoldFeatureControllerOfSnackBar$SnackBarClosedReason()])))(),
    CompleterOfSnackBarClosedReason: () => (T$.CompleterOfSnackBarClosedReason = dart.constFn(async.Completer$(snack_bar.SnackBarClosedReason)))(),
    voidToNull: () => (T$.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))(),
    BuildContextAndBoxConstraintsToMediaQuery: () => (T$.BuildContextAndBoxConstraintsToMediaQuery = dart.constFn(dart.fnType(media_query.MediaQuery, [framework.BuildContext, box$.BoxConstraints])))(),
    RectTodynamic: () => (T$.RectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [ui.Rect])))(),
    AnimationMinOfdouble: () => (T$.AnimationMinOfdouble = dart.constFn(animations.AnimationMin$(core.double)))(),
    GlobalKeyOfDrawerControllerState: () => (T$.GlobalKeyOfDrawerControllerState = dart.constFn(framework.GlobalKey$(drawer.DrawerControllerState)))(),
    JSArrayOf_StandardBottomSheet: () => (T$.JSArrayOf_StandardBottomSheet = dart.constFn(_interceptors.JSArray$(scaffold$._StandardBottomSheet)))(),
    DraggableScrollableNotificationTobool: () => (T$.DraggableScrollableNotificationTobool = dart.constFn(dart.fnType(core.bool, [draggable_scrollable_sheet.DraggableScrollableNotification])))(),
    FnTovoid: () => (T$.FnTovoid = dart.constFn(dart.fnType(dart.void, [T$.VoidTovoid()])))(),
    BuildContextAndFnToWidget: () => (T$.BuildContextAndFnToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.FnTovoid()])))(),
    BuildContextToNotificationListenerOfDraggableScrollableNotification: () => (T$.BuildContextToNotificationListenerOfDraggableScrollableNotification = dart.constFn(dart.fnType(T$.NotificationListenerOfDraggableScrollableNotification(), [framework.BuildContext])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    GlobalKeyOf_StandardBottomSheetState: () => (T$.GlobalKeyOf_StandardBottomSheetState = dart.constFn(framework.GlobalKey$(scaffold$._StandardBottomSheetState)))(),
    VoidTo_StandardBottomSheet: () => (T$.VoidTo_StandardBottomSheet = dart.constFn(dart.fnType(scaffold$._StandardBottomSheet, [])))(),
    _StandardBottomSheetTodynamic: () => (T$._StandardBottomSheetTodynamic = dart.constFn(dart.fnType(dart.dynamic, [scaffold$._StandardBottomSheet])))(),
    JSArrayOfLayoutId: () => (T$.JSArrayOfLayoutId = dart.constFn(_interceptors.JSArray$(basic.LayoutId)))(),
    BuildContextAndWidgetNToCustomMultiChildLayout: () => (T$.BuildContextAndWidgetNToCustomMultiChildLayout = dart.constFn(dart.fnType(basic.CustomMultiChildLayout, [framework.BuildContext, T$.WidgetN()])))(),
    MaterialTypeL: () => (T$.MaterialTypeL = dart.constFn(dart.legacy(material.MaterialType)))(),
    EnumPropertyOfMaterialType: () => (T$.EnumPropertyOfMaterialType = dart.constFn(diagnostics.EnumProperty$(material.MaterialType)))(),
    DiagnosticsPropertyOfBorderRadiusGeometry: () => (T$.DiagnosticsPropertyOfBorderRadiusGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadiusGeometry)))(),
    NotificationListenerOfLayoutChangedNotification: () => (T$.NotificationListenerOfLayoutChangedNotification = dart.constFn(notification_listener.NotificationListener$(notification_listener.LayoutChangedNotification)))(),
    LayoutChangedNotificationTobool: () => (T$.LayoutChangedNotificationTobool = dart.constFn(dart.fnType(core.bool, [notification_listener.LayoutChangedNotification])))(),
    JSArrayOfInkFeature: () => (T$.JSArrayOfInkFeature = dart.constFn(_interceptors.JSArray$(material.InkFeature)))(),
    dynamicToTweenOfdouble: () => (T$.dynamicToTweenOfdouble = dart.constFn(dart.fnType(T$.TweenOfdouble(), [dart.dynamic])))(),
    TweenNOfdouble: () => (T$.TweenNOfdouble = dart.constFn(dart.nullable(T$.TweenOfdouble())))(),
    dynamicToColorTween: () => (T$.dynamicToColorTween = dart.constFn(dart.fnType(tween.ColorTween, [dart.dynamic])))(),
    ColorTweenN: () => (T$.ColorTweenN = dart.constFn(dart.nullable(tween.ColorTween)))(),
    dynamicToShapeBorderTween: () => (T$.dynamicToShapeBorderTween = dart.constFn(dart.fnType(material.ShapeBorderTween, [dart.dynamic])))(),
    ShapeBorderTweenN: () => (T$.ShapeBorderTweenN = dart.constFn(dart.nullable(material.ShapeBorderTween)))(),
    BorderRadiusN: () => (T$.BorderRadiusN = dart.constFn(dart.nullable(border_radius.BorderRadius)))(),
    LinkedMapOfMaterialType$BorderRadiusN: () => (T$.LinkedMapOfMaterialType$BorderRadiusN = dart.constFn(_js_helper.LinkedMap$(material.MaterialType, T$.BorderRadiusN())))(),
    SynchronousFutureOfMaterialLocalizations: () => (T$.SynchronousFutureOfMaterialLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(material_localizations.MaterialLocalizations)))(),
    DiagnosticsPropertyOfThemeData: () => (T$.DiagnosticsPropertyOfThemeData = dart.constFn(diagnostics.DiagnosticsProperty$(theme_data.ThemeData)))(),
    dynamicToThemeDataTween: () => (T$.dynamicToThemeDataTween = dart.constFn(dart.fnType(theme$.ThemeDataTween, [dart.dynamic])))(),
    DiagnosticsPropertyOfThemeDataTween: () => (T$.DiagnosticsPropertyOfThemeDataTween = dart.constFn(diagnostics.DiagnosticsProperty$(theme$.ThemeDataTween)))(),
    AnnotatedRegionOfSystemUiOverlayStyle: () => (T$.AnnotatedRegionOfSystemUiOverlayStyle = dart.constFn(annotated_region.AnnotatedRegion$(system_chrome.SystemUiOverlayStyle)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T$);
  var S = {
    iconSize: dart.privateName(icon_button, "IconButton.iconSize"),
    visualDensity: dart.privateName(icon_button, "IconButton.visualDensity"),
    padding: dart.privateName(icon_button, "IconButton.padding"),
    alignment: dart.privateName(icon_button, "IconButton.alignment"),
    splashRadius: dart.privateName(icon_button, "IconButton.splashRadius"),
    icon: dart.privateName(icon_button, "IconButton.icon"),
    focusColor: dart.privateName(icon_button, "IconButton.focusColor"),
    hoverColor: dart.privateName(icon_button, "IconButton.hoverColor"),
    color: dart.privateName(icon_button, "IconButton.color"),
    splashColor: dart.privateName(icon_button, "IconButton.splashColor"),
    highlightColor: dart.privateName(icon_button, "IconButton.highlightColor"),
    disabledColor: dart.privateName(icon_button, "IconButton.disabledColor"),
    onPressed: dart.privateName(icon_button, "IconButton.onPressed"),
    mouseCursor: dart.privateName(icon_button, "IconButton.mouseCursor"),
    focusNode: dart.privateName(icon_button, "IconButton.focusNode"),
    autofocus: dart.privateName(icon_button, "IconButton.autofocus"),
    tooltip: dart.privateName(icon_button, "IconButton.tooltip"),
    enableFeedback: dart.privateName(icon_button, "IconButton.enableFeedback"),
    constraints: dart.privateName(icon_button, "IconButton.constraints"),
    EdgeInsets_bottom: dart.privateName(edge_insets, "EdgeInsets.bottom"),
    EdgeInsets_right: dart.privateName(edge_insets, "EdgeInsets.right"),
    EdgeInsets_top: dart.privateName(edge_insets, "EdgeInsets.top"),
    EdgeInsets_left: dart.privateName(edge_insets, "EdgeInsets.left"),
    Alignment_y: dart.privateName(alignment, "Alignment.y"),
    Alignment_x: dart.privateName(alignment, "Alignment.x"),
    SystemMouseCursor_kind: dart.privateName(mouse_cursor, "SystemMouseCursor.kind"),
    BoxConstraints_maxHeight: dart.privateName(box$, "BoxConstraints.maxHeight"),
    BoxConstraints_minHeight: dart.privateName(box$, "BoxConstraints.minHeight"),
    BoxConstraints_maxWidth: dart.privateName(box$, "BoxConstraints.maxWidth"),
    BoxConstraints_minWidth: dart.privateName(box$, "BoxConstraints.minWidth"),
    _Location_parameterLocations: dart.privateName(widget_inspector, "_Location.parameterLocations"),
    _Location_name: dart.privateName(widget_inspector, "_Location.name"),
    _Location_column: dart.privateName(widget_inspector, "_Location.column"),
    _Location_line: dart.privateName(widget_inspector, "_Location.line"),
    _Location_file: dart.privateName(widget_inspector, "_Location.file"),
    _name: dart.privateName(platform$, "_name"),
    color$1: dart.privateName(back_button, "BackButton.color"),
    onPressed$1: dart.privateName(back_button, "BackButton.onPressed"),
    Widget__location: dart.privateName(framework, "Widget._location"),
    Widget_key: dart.privateName(framework, "Widget.key"),
    color$2: dart.privateName(back_button, "CloseButton.color"),
    onPressed$2: dart.privateName(back_button, "CloseButton.onPressed"),
    Icon_textDirection: dart.privateName(icon, "Icon.textDirection"),
    Icon_semanticLabel: dart.privateName(icon, "Icon.semanticLabel"),
    Icon_color: dart.privateName(icon, "Icon.color"),
    Icon_size: dart.privateName(icon, "Icon.size"),
    IconData_matchTextDirection: dart.privateName(icon_data, "IconData.matchTextDirection"),
    IconData_fontPackage: dart.privateName(icon_data, "IconData.fontPackage"),
    IconData_fontFamily: dart.privateName(icon_data, "IconData.fontFamily"),
    IconData_codePoint: dart.privateName(icon_data, "IconData.codePoint"),
    Icon_icon: dart.privateName(icon, "Icon.icon"),
    _name$1: dart.privateName(time, "_name"),
    hour: dart.privateName(time, "TimeOfDay.hour"),
    minute: dart.privateName(time, "TimeOfDay.minute"),
    $toString: dartx.toString,
    __InkRipple__radius: dart.privateName(ink_ripple, "_#InkRipple#_radius"),
    __InkRipple__radius_isSet: dart.privateName(ink_ripple, "_#InkRipple#_radius#isSet"),
    __InkRipple__radiusController: dart.privateName(ink_ripple, "_#InkRipple#_radiusController"),
    __InkRipple__radiusController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_radiusController#isSet"),
    __InkRipple__fadeIn: dart.privateName(ink_ripple, "_#InkRipple#_fadeIn"),
    __InkRipple__fadeIn_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeIn#isSet"),
    __InkRipple__fadeInController: dart.privateName(ink_ripple, "_#InkRipple#_fadeInController"),
    __InkRipple__fadeInController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeInController#isSet"),
    __InkRipple__fadeOut: dart.privateName(ink_ripple, "_#InkRipple#_fadeOut"),
    __InkRipple__fadeOut_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeOut#isSet"),
    __InkRipple__fadeOutController: dart.privateName(ink_ripple, "_#InkRipple#_fadeOutController"),
    __InkRipple__fadeOutController_isSet: dart.privateName(ink_ripple, "_#InkRipple#_fadeOutController#isSet"),
    _position: dart.privateName(ink_ripple, "_position"),
    _borderRadius: dart.privateName(ink_ripple, "_borderRadius"),
    _customBorder: dart.privateName(ink_ripple, "_customBorder"),
    _textDirection: dart.privateName(ink_ripple, "_textDirection"),
    _targetRadius: dart.privateName(ink_ripple, "_targetRadius"),
    _clipCallback: dart.privateName(ink_ripple, "_clipCallback"),
    _fadeInController: dart.privateName(ink_ripple, "_fadeInController"),
    _fadeIn: dart.privateName(ink_ripple, "_fadeIn"),
    _radiusController: dart.privateName(ink_ripple, "_radiusController"),
    _radius: dart.privateName(ink_ripple, "_radius"),
    _fadeOutController: dart.privateName(ink_ripple, "_fadeOutController"),
    _handleAlphaStatusChanged: dart.privateName(ink_ripple, "_handleAlphaStatusChanged"),
    _fadeOut: dart.privateName(ink_ripple, "_fadeOut"),
    _color: dart.privateName(ink_well, "_color"),
    Radius_y: dart.privateName(ui, "Radius.y"),
    Radius_x: dart.privateName(ui, "Radius.x"),
    BorderRadius_bottomRight: dart.privateName(border_radius, "BorderRadius.bottomRight"),
    BorderRadius_bottomLeft: dart.privateName(border_radius, "BorderRadius.bottomLeft"),
    BorderRadius_topRight: dart.privateName(border_radius, "BorderRadius.topRight"),
    BorderRadius_topLeft: dart.privateName(border_radius, "BorderRadius.topLeft"),
    referenceBox: dart.privateName(material, "InkFeature.referenceBox"),
    onRemoved: dart.privateName(material, "InkFeature.onRemoved"),
    _debugDisposed: dart.privateName(material, "_debugDisposed"),
    _controller: dart.privateName(material, "_controller"),
    _removeFeature: dart.privateName(material, "_removeFeature"),
    $add: dartx.add,
    $length: dartx.length,
    $_get: dartx._get,
    _paint: dart.privateName(material, "_paint"),
    Interval_curve: dart.privateName(curves, "Interval.curve"),
    Interval_end: dart.privateName(curves, "Interval.end"),
    Interval_begin: dart.privateName(curves, "Interval.begin"),
    Duration__duration: dart.privateName(core, "Duration._duration"),
    onPressed$3: dart.privateName(button_style_button, "ButtonStyleButton.onPressed"),
    onLongPress: dart.privateName(button_style_button, "ButtonStyleButton.onLongPress"),
    style: dart.privateName(button_style_button, "ButtonStyleButton.style"),
    clipBehavior: dart.privateName(button_style_button, "ButtonStyleButton.clipBehavior"),
    focusNode$1: dart.privateName(button_style_button, "ButtonStyleButton.focusNode"),
    autofocus$1: dart.privateName(button_style_button, "ButtonStyleButton.autofocus"),
    child: dart.privateName(button_style_button, "ButtonStyleButton.child"),
    _controller$1: dart.privateName(button_style_button, "_controller"),
    _elevation: dart.privateName(button_style_button, "_elevation"),
    _backgroundColor: dart.privateName(button_style_button, "_backgroundColor"),
    _states: dart.privateName(button_style_button, "_states"),
    _hovered: dart.privateName(button_style_button, "_hovered"),
    _focused: dart.privateName(button_style_button, "_focused"),
    _pressed: dart.privateName(button_style_button, "_pressed"),
    _disabled: dart.privateName(button_style_button, "_disabled"),
    _updateState: dart.privateName(button_style_button, "_updateState"),
    _handleHighlightChanged: dart.privateName(button_style_button, "_handleHighlightChanged"),
    _handleHoveredChanged: dart.privateName(button_style_button, "_handleHoveredChanged"),
    _handleFocusedChanged: dart.privateName(button_style_button, "_handleFocusedChanged"),
    _name$2: dart.privateName(theme_data, "_name"),
    resolveCallback: dart.privateName(button_style_button, "_MouseCursor.resolveCallback"),
    minSize: dart.privateName(button_style_button, "_InputPadding.minSize"),
    _minSize: dart.privateName(button_style_button, "_minSize"),
    _computeSize: dart.privateName(button_style_button, "_computeSize"),
    _name$3: dart.privateName(ui, "_name"),
    OffsetBase__dy: dart.privateName(ui, "OffsetBase._dy"),
    OffsetBase__dx: dart.privateName(ui, "OffsetBase._dx"),
    _name$4: dart.privateName(borders, "_name"),
    BorderSide_style: dart.privateName(borders, "BorderSide.style"),
    BorderSide_width: dart.privateName(borders, "BorderSide.width"),
    Color_value: dart.privateName(ui, "Color.value"),
    BorderSide_color: dart.privateName(borders, "BorderSide.color"),
    OutlinedBorder_side: dart.privateName(borders, "OutlinedBorder.side"),
    RoundedRectangleBorder_borderRadius: dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius"),
    label: dart.privateName(text_button, "_TextButtonWithIconChild.label"),
    icon$1: dart.privateName(text_button, "_TextButtonWithIconChild.icon"),
    _name$5: dart.privateName(snack_bar, "_name"),
    textColor: dart.privateName(snack_bar, "SnackBarAction.textColor"),
    disabledTextColor: dart.privateName(snack_bar, "SnackBarAction.disabledTextColor"),
    label$1: dart.privateName(snack_bar, "SnackBarAction.label"),
    onPressed$4: dart.privateName(snack_bar, "SnackBarAction.onPressed"),
    _haveTriggeredAction: dart.privateName(snack_bar, "_haveTriggeredAction"),
    _handlePressed: dart.privateName(snack_bar, "_handlePressed"),
    content: dart.privateName(snack_bar, "SnackBar.content"),
    backgroundColor: dart.privateName(snack_bar, "SnackBar.backgroundColor"),
    elevation: dart.privateName(snack_bar, "SnackBar.elevation"),
    margin: dart.privateName(snack_bar, "SnackBar.margin"),
    padding$1: dart.privateName(snack_bar, "SnackBar.padding"),
    width: dart.privateName(snack_bar, "SnackBar.width"),
    shape: dart.privateName(snack_bar, "SnackBar.shape"),
    behavior: dart.privateName(snack_bar, "SnackBar.behavior"),
    action: dart.privateName(snack_bar, "SnackBar.action"),
    duration: dart.privateName(snack_bar, "SnackBar.duration"),
    animation: dart.privateName(snack_bar, "SnackBar.animation"),
    onVisible: dart.privateName(snack_bar, "SnackBar.onVisible"),
    _wasVisible: dart.privateName(snack_bar, "_wasVisible"),
    _onAnimationStatusChanged: dart.privateName(snack_bar, "_onAnimationStatusChanged"),
    _name$6: dart.privateName(animation, "_name"),
    Threshold_threshold: dart.privateName(curves, "Threshold.threshold"),
    ValueKey_value: dart.privateName(key, "ValueKey.value"),
    Cubic_d: dart.privateName(curves, "Cubic.d"),
    Cubic_c: dart.privateName(curves, "Cubic.c"),
    Cubic_b: dart.privateName(curves, "Cubic.b"),
    Cubic_a: dart.privateName(curves, "Cubic.a"),
    child$1: dart.privateName(floating_action_button, "FloatingActionButton.child"),
    tooltip$1: dart.privateName(floating_action_button, "FloatingActionButton.tooltip"),
    foregroundColor: dart.privateName(floating_action_button, "FloatingActionButton.foregroundColor"),
    backgroundColor$1: dart.privateName(floating_action_button, "FloatingActionButton.backgroundColor"),
    focusColor$1: dart.privateName(floating_action_button, "FloatingActionButton.focusColor"),
    hoverColor$1: dart.privateName(floating_action_button, "FloatingActionButton.hoverColor"),
    splashColor$1: dart.privateName(floating_action_button, "FloatingActionButton.splashColor"),
    heroTag: dart.privateName(floating_action_button, "FloatingActionButton.heroTag"),
    onPressed$5: dart.privateName(floating_action_button, "FloatingActionButton.onPressed"),
    mouseCursor$1: dart.privateName(floating_action_button, "FloatingActionButton.mouseCursor"),
    elevation$1: dart.privateName(floating_action_button, "FloatingActionButton.elevation"),
    focusElevation: dart.privateName(floating_action_button, "FloatingActionButton.focusElevation"),
    hoverElevation: dart.privateName(floating_action_button, "FloatingActionButton.hoverElevation"),
    highlightElevation: dart.privateName(floating_action_button, "FloatingActionButton.highlightElevation"),
    disabledElevation: dart.privateName(floating_action_button, "FloatingActionButton.disabledElevation"),
    mini: dart.privateName(floating_action_button, "FloatingActionButton.mini"),
    shape$1: dart.privateName(floating_action_button, "FloatingActionButton.shape"),
    clipBehavior$1: dart.privateName(floating_action_button, "FloatingActionButton.clipBehavior"),
    isExtended: dart.privateName(floating_action_button, "FloatingActionButton.isExtended"),
    focusNode$2: dart.privateName(floating_action_button, "FloatingActionButton.focusNode"),
    autofocus$2: dart.privateName(floating_action_button, "FloatingActionButton.autofocus"),
    materialTapTargetSize: dart.privateName(floating_action_button, "FloatingActionButton.materialTapTargetSize"),
    _sizeConstraints: dart.privateName(floating_action_button, "FloatingActionButton._sizeConstraints"),
    SingleChildRenderObjectWidget_child: dart.privateName(framework, "SingleChildRenderObjectWidget.child"),
    SizedBox_height: dart.privateName(basic, "SizedBox.height"),
    SizedBox_width: dart.privateName(basic, "SizedBox.width"),
    _sizeConstraints$1: dart.privateName(floating_action_button, "_sizeConstraints"),
    _name$7: dart.privateName(flexible_space_bar, "_name"),
    title: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.title"),
    background: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.background"),
    centerTitle: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.centerTitle"),
    collapseMode: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.collapseMode"),
    stretchModes: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.stretchModes"),
    titlePadding: dart.privateName(flexible_space_bar, "FlexibleSpaceBar.titlePadding"),
    _getEffectiveCenterTitle: dart.privateName(flexible_space_bar, "_getEffectiveCenterTitle"),
    _getTitleAlignment: dart.privateName(flexible_space_bar, "_getTitleAlignment"),
    _getCollapsePadding: dart.privateName(flexible_space_bar, "_getCollapsePadding"),
    $clamp: dartx.clamp,
    $contains: dartx.contains,
    toolbarOpacity: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.toolbarOpacity"),
    minExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.minExtent"),
    maxExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.maxExtent"),
    currentExtent: dart.privateName(flexible_space_bar, "FlexibleSpaceBarSettings.currentExtent"),
    _name$8: dart.privateName(list_tile, "_name"),
    dense: dart.privateName(list_tile, "ListTileTheme.dense"),
    shape$2: dart.privateName(list_tile, "ListTileTheme.shape"),
    style$1: dart.privateName(list_tile, "ListTileTheme.style"),
    selectedColor: dart.privateName(list_tile, "ListTileTheme.selectedColor"),
    iconColor: dart.privateName(list_tile, "ListTileTheme.iconColor"),
    textColor$1: dart.privateName(list_tile, "ListTileTheme.textColor"),
    contentPadding: dart.privateName(list_tile, "ListTileTheme.contentPadding"),
    tileColor: dart.privateName(list_tile, "ListTileTheme.tileColor"),
    selectedTileColor: dart.privateName(list_tile, "ListTileTheme.selectedTileColor"),
    horizontalTitleGap: dart.privateName(list_tile, "ListTileTheme.horizontalTitleGap"),
    minVerticalPadding: dart.privateName(list_tile, "ListTileTheme.minVerticalPadding"),
    minLeadingWidth: dart.privateName(list_tile, "ListTileTheme.minLeadingWidth"),
    enableFeedback$1: dart.privateName(list_tile, "ListTileTheme.enableFeedback"),
    ProxyWidget_child: dart.privateName(framework, "ProxyWidget.child"),
    leading: dart.privateName(list_tile, "ListTile.leading"),
    title$1: dart.privateName(list_tile, "ListTile.title"),
    subtitle: dart.privateName(list_tile, "ListTile.subtitle"),
    trailing: dart.privateName(list_tile, "ListTile.trailing"),
    isThreeLine: dart.privateName(list_tile, "ListTile.isThreeLine"),
    dense$1: dart.privateName(list_tile, "ListTile.dense"),
    visualDensity$1: dart.privateName(list_tile, "ListTile.visualDensity"),
    shape$3: dart.privateName(list_tile, "ListTile.shape"),
    contentPadding$1: dart.privateName(list_tile, "ListTile.contentPadding"),
    enabled: dart.privateName(list_tile, "ListTile.enabled"),
    onTap: dart.privateName(list_tile, "ListTile.onTap"),
    onLongPress$1: dart.privateName(list_tile, "ListTile.onLongPress"),
    mouseCursor$2: dart.privateName(list_tile, "ListTile.mouseCursor"),
    selected: dart.privateName(list_tile, "ListTile.selected"),
    focusColor$2: dart.privateName(list_tile, "ListTile.focusColor"),
    hoverColor$2: dart.privateName(list_tile, "ListTile.hoverColor"),
    focusNode$3: dart.privateName(list_tile, "ListTile.focusNode"),
    autofocus$3: dart.privateName(list_tile, "ListTile.autofocus"),
    tileColor$1: dart.privateName(list_tile, "ListTile.tileColor"),
    selectedTileColor$1: dart.privateName(list_tile, "ListTile.selectedTileColor"),
    enableFeedback$2: dart.privateName(list_tile, "ListTile.enableFeedback"),
    horizontalTitleGap$1: dart.privateName(list_tile, "ListTile.horizontalTitleGap"),
    minVerticalPadding$1: dart.privateName(list_tile, "ListTile.minVerticalPadding"),
    minLeadingWidth$1: dart.privateName(list_tile, "ListTile.minLeadingWidth"),
    $iterator: dartx.iterator,
    _iconColor: dart.privateName(list_tile, "_iconColor"),
    _textColor: dart.privateName(list_tile, "_textColor"),
    _isDenseLayout: dart.privateName(list_tile, "_isDenseLayout"),
    _titleTextStyle: dart.privateName(list_tile, "_titleTextStyle"),
    _subtitleTextStyle: dart.privateName(list_tile, "_subtitleTextStyle"),
    _trailingAndLeadingTextStyle: dart.privateName(list_tile, "_trailingAndLeadingTextStyle"),
    _tileBackgroundColor: dart.privateName(list_tile, "_tileBackgroundColor"),
    leading$1: dart.privateName(list_tile, "_ListTile.leading"),
    title$2: dart.privateName(list_tile, "_ListTile.title"),
    subtitle$1: dart.privateName(list_tile, "_ListTile.subtitle"),
    trailing$1: dart.privateName(list_tile, "_ListTile.trailing"),
    isThreeLine$1: dart.privateName(list_tile, "_ListTile.isThreeLine"),
    isDense: dart.privateName(list_tile, "_ListTile.isDense"),
    visualDensity$2: dart.privateName(list_tile, "_ListTile.visualDensity"),
    textDirection: dart.privateName(list_tile, "_ListTile.textDirection"),
    titleBaselineType: dart.privateName(list_tile, "_ListTile.titleBaselineType"),
    subtitleBaselineType: dart.privateName(list_tile, "_ListTile.subtitleBaselineType"),
    horizontalTitleGap$2: dart.privateName(list_tile, "_ListTile.horizontalTitleGap"),
    minVerticalPadding$2: dart.privateName(list_tile, "_ListTile.minVerticalPadding"),
    minLeadingWidth$2: dart.privateName(list_tile, "_ListTile.minLeadingWidth"),
    $values: dartx.values,
    $forEach: dartx.forEach,
    $containsValue: dartx.containsValue,
    $containsKey: dartx.containsKey,
    $remove: dartx.remove,
    $_set: dartx._set,
    _mountChild: dart.privateName(list_tile, "_mountChild"),
    _updateChild: dart.privateName(list_tile, "_updateChild"),
    _updateRenderObject: dart.privateName(list_tile, "_updateRenderObject"),
    $keys: dartx.keys,
    _leading: dart.privateName(list_tile, "_leading"),
    _title: dart.privateName(list_tile, "_title"),
    _subtitle: dart.privateName(list_tile, "_subtitle"),
    _trailing: dart.privateName(list_tile, "_trailing"),
    _isDense: dart.privateName(list_tile, "_isDense"),
    _visualDensity: dart.privateName(list_tile, "_visualDensity"),
    _isThreeLine: dart.privateName(list_tile, "_isThreeLine"),
    _textDirection$1: dart.privateName(list_tile, "_textDirection"),
    _titleBaselineType: dart.privateName(list_tile, "_titleBaselineType"),
    _subtitleBaselineType: dart.privateName(list_tile, "_subtitleBaselineType"),
    _horizontalTitleGap: dart.privateName(list_tile, "_horizontalTitleGap"),
    _minVerticalPadding: dart.privateName(list_tile, "_minVerticalPadding"),
    _minLeadingWidth: dart.privateName(list_tile, "_minLeadingWidth"),
    _children: dart.privateName(list_tile, "_children"),
    _effectiveHorizontalTitleGap: dart.privateName(list_tile, "_effectiveHorizontalTitleGap"),
    _defaultTileHeight: dart.privateName(list_tile, "_defaultTileHeight"),
    _name$9: dart.privateName(drawer, "_name"),
    elevation$2: dart.privateName(drawer, "Drawer.elevation"),
    child$2: dart.privateName(drawer, "Drawer.child"),
    semanticLabel: dart.privateName(drawer, "Drawer.semanticLabel"),
    child$3: dart.privateName(drawer, "DrawerController.child"),
    alignment$1: dart.privateName(drawer, "DrawerController.alignment"),
    drawerCallback: dart.privateName(drawer, "DrawerController.drawerCallback"),
    dragStartBehavior: dart.privateName(drawer, "DrawerController.dragStartBehavior"),
    scrimColor: dart.privateName(drawer, "DrawerController.scrimColor"),
    enableOpenDragGesture: dart.privateName(drawer, "DrawerController.enableOpenDragGesture"),
    edgeDragWidth: dart.privateName(drawer, "DrawerController.edgeDragWidth"),
    isDrawerOpen: dart.privateName(drawer, "DrawerController.isDrawerOpen"),
    _name$10: dart.privateName(recognizer, "_name"),
    _historyEntry: dart.privateName(drawer, "_historyEntry"),
    _focusScopeNode: dart.privateName(drawer, "_focusScopeNode"),
    __DrawerControllerState__controller: dart.privateName(drawer, "_#DrawerControllerState#_controller"),
    __DrawerControllerState__controller_isSet: dart.privateName(drawer, "_#DrawerControllerState#_controller#isSet"),
    _drawerKey: dart.privateName(drawer, "_drawerKey"),
    _previouslyOpened: dart.privateName(drawer, "_previouslyOpened"),
    __DrawerControllerState__scrimColorTween: dart.privateName(drawer, "_#DrawerControllerState#_scrimColorTween"),
    __DrawerControllerState__scrimColorTween_isSet: dart.privateName(drawer, "_#DrawerControllerState#_scrimColorTween#isSet"),
    _gestureDetectorKey: dart.privateName(drawer, "_gestureDetectorKey"),
    _scrimColorTween: dart.privateName(drawer, "_scrimColorTween"),
    _buildScrimColorTween: dart.privateName(drawer, "_buildScrimColorTween"),
    _controller$2: dart.privateName(drawer, "_controller"),
    _animationChanged: dart.privateName(drawer, "_animationChanged"),
    _animationStatusChanged: dart.privateName(drawer, "_animationStatusChanged"),
    _handleHistoryEntryRemoved: dart.privateName(drawer, "_handleHistoryEntryRemoved"),
    _ensureHistoryEntry: dart.privateName(drawer, "_ensureHistoryEntry"),
    _handleDragDown: dart.privateName(drawer, "_handleDragDown"),
    _handleDragCancel: dart.privateName(drawer, "_handleDragCancel"),
    _width: dart.privateName(drawer, "_width"),
    _move: dart.privateName(drawer, "_move"),
    $abs: dartx.abs,
    _settle: dart.privateName(drawer, "_settle"),
    _drawerOuterAlignment: dart.privateName(drawer, "_drawerOuterAlignment"),
    _drawerInnerAlignment: dart.privateName(drawer, "_drawerInnerAlignment"),
    _buildDrawer: dart.privateName(drawer, "_buildDrawer"),
    height: dart.privateName(divider, "Divider.height"),
    thickness: dart.privateName(divider, "Divider.thickness"),
    indent: dart.privateName(divider, "Divider.indent"),
    endIndent: dart.privateName(divider, "Divider.endIndent"),
    color$3: dart.privateName(divider, "Divider.color"),
    width$1: dart.privateName(divider, "VerticalDivider.width"),
    thickness$1: dart.privateName(divider, "VerticalDivider.thickness"),
    indent$1: dart.privateName(divider, "VerticalDivider.indent"),
    endIndent$1: dart.privateName(divider, "VerticalDivider.endIndent"),
    color$4: dart.privateName(divider, "VerticalDivider.color"),
    backgroundColor$2: dart.privateName(dialog, "Dialog.backgroundColor"),
    elevation$3: dart.privateName(dialog, "Dialog.elevation"),
    insetAnimationDuration: dart.privateName(dialog, "Dialog.insetAnimationDuration"),
    insetAnimationCurve: dart.privateName(dialog, "Dialog.insetAnimationCurve"),
    insetPadding: dart.privateName(dialog, "Dialog.insetPadding"),
    clipBehavior$2: dart.privateName(dialog, "Dialog.clipBehavior"),
    shape$4: dart.privateName(dialog, "Dialog.shape"),
    child$4: dart.privateName(dialog, "Dialog.child"),
    title$3: dart.privateName(dialog, "AlertDialog.title"),
    titlePadding$1: dart.privateName(dialog, "AlertDialog.titlePadding"),
    titleTextStyle: dart.privateName(dialog, "AlertDialog.titleTextStyle"),
    content$1: dart.privateName(dialog, "AlertDialog.content"),
    contentPadding$2: dart.privateName(dialog, "AlertDialog.contentPadding"),
    contentTextStyle: dart.privateName(dialog, "AlertDialog.contentTextStyle"),
    actions: dart.privateName(dialog, "AlertDialog.actions"),
    actionsPadding: dart.privateName(dialog, "AlertDialog.actionsPadding"),
    actionsOverflowDirection: dart.privateName(dialog, "AlertDialog.actionsOverflowDirection"),
    actionsOverflowButtonSpacing: dart.privateName(dialog, "AlertDialog.actionsOverflowButtonSpacing"),
    buttonPadding: dart.privateName(dialog, "AlertDialog.buttonPadding"),
    backgroundColor$3: dart.privateName(dialog, "AlertDialog.backgroundColor"),
    elevation$4: dart.privateName(dialog, "AlertDialog.elevation"),
    semanticLabel$1: dart.privateName(dialog, "AlertDialog.semanticLabel"),
    insetPadding$1: dart.privateName(dialog, "AlertDialog.insetPadding"),
    clipBehavior$3: dart.privateName(dialog, "AlertDialog.clipBehavior"),
    shape$5: dart.privateName(dialog, "AlertDialog.shape"),
    scrollable: dart.privateName(dialog, "AlertDialog.scrollable"),
    onPressed$6: dart.privateName(dialog, "SimpleDialogOption.onPressed"),
    child$5: dart.privateName(dialog, "SimpleDialogOption.child"),
    padding$2: dart.privateName(dialog, "SimpleDialogOption.padding"),
    title$4: dart.privateName(dialog, "SimpleDialog.title"),
    titlePadding$2: dart.privateName(dialog, "SimpleDialog.titlePadding"),
    titleTextStyle$1: dart.privateName(dialog, "SimpleDialog.titleTextStyle"),
    children: dart.privateName(dialog, "SimpleDialog.children"),
    contentPadding$3: dart.privateName(dialog, "SimpleDialog.contentPadding"),
    backgroundColor$4: dart.privateName(dialog, "SimpleDialog.backgroundColor"),
    elevation$5: dart.privateName(dialog, "SimpleDialog.elevation"),
    semanticLabel$2: dart.privateName(dialog, "SimpleDialog.semanticLabel"),
    insetPadding$2: dart.privateName(dialog, "SimpleDialog.insetPadding"),
    clipBehavior$4: dart.privateName(dialog, "SimpleDialog.clipBehavior"),
    shape$6: dart.privateName(dialog, "SimpleDialog.shape"),
    $toDouble: dartx.toDouble,
    onPressed$7: dart.privateName(material_button, "MaterialButton.onPressed"),
    onLongPress$2: dart.privateName(material_button, "MaterialButton.onLongPress"),
    onHighlightChanged: dart.privateName(material_button, "MaterialButton.onHighlightChanged"),
    mouseCursor$3: dart.privateName(material_button, "MaterialButton.mouseCursor"),
    textTheme: dart.privateName(material_button, "MaterialButton.textTheme"),
    textColor$2: dart.privateName(material_button, "MaterialButton.textColor"),
    disabledTextColor$1: dart.privateName(material_button, "MaterialButton.disabledTextColor"),
    color$5: dart.privateName(material_button, "MaterialButton.color"),
    disabledColor$1: dart.privateName(material_button, "MaterialButton.disabledColor"),
    splashColor$2: dart.privateName(material_button, "MaterialButton.splashColor"),
    focusColor$3: dart.privateName(material_button, "MaterialButton.focusColor"),
    hoverColor$3: dart.privateName(material_button, "MaterialButton.hoverColor"),
    highlightColor$1: dart.privateName(material_button, "MaterialButton.highlightColor"),
    elevation$6: dart.privateName(material_button, "MaterialButton.elevation"),
    hoverElevation$1: dart.privateName(material_button, "MaterialButton.hoverElevation"),
    focusElevation$1: dart.privateName(material_button, "MaterialButton.focusElevation"),
    highlightElevation$1: dart.privateName(material_button, "MaterialButton.highlightElevation"),
    disabledElevation$1: dart.privateName(material_button, "MaterialButton.disabledElevation"),
    colorBrightness: dart.privateName(material_button, "MaterialButton.colorBrightness"),
    child$6: dart.privateName(material_button, "MaterialButton.child"),
    padding$3: dart.privateName(material_button, "MaterialButton.padding"),
    visualDensity$3: dart.privateName(material_button, "MaterialButton.visualDensity"),
    shape$7: dart.privateName(material_button, "MaterialButton.shape"),
    clipBehavior$5: dart.privateName(material_button, "MaterialButton.clipBehavior"),
    focusNode$4: dart.privateName(material_button, "MaterialButton.focusNode"),
    autofocus$4: dart.privateName(material_button, "MaterialButton.autofocus"),
    animationDuration: dart.privateName(material_button, "MaterialButton.animationDuration"),
    materialTapTargetSize$1: dart.privateName(material_button, "MaterialButton.materialTapTargetSize"),
    minWidth: dart.privateName(material_button, "MaterialButton.minWidth"),
    height$1: dart.privateName(material_button, "MaterialButton.height"),
    enableFeedback$3: dart.privateName(material_button, "MaterialButton.enableFeedback"),
    highlightedBorderColor: dart.privateName(outline_button, "OutlineButton.highlightedBorderColor"),
    disabledBorderColor: dart.privateName(outline_button, "OutlineButton.disabledBorderColor"),
    borderSide: dart.privateName(outline_button, "OutlineButton.borderSide"),
    onPressed$8: dart.privateName(outline_button, "_OutlineButton.onPressed"),
    onLongPress$3: dart.privateName(outline_button, "_OutlineButton.onLongPress"),
    mouseCursor$4: dart.privateName(outline_button, "_OutlineButton.mouseCursor"),
    brightness: dart.privateName(outline_button, "_OutlineButton.brightness"),
    textTheme$1: dart.privateName(outline_button, "_OutlineButton.textTheme"),
    textColor$3: dart.privateName(outline_button, "_OutlineButton.textColor"),
    disabledTextColor$2: dart.privateName(outline_button, "_OutlineButton.disabledTextColor"),
    color$6: dart.privateName(outline_button, "_OutlineButton.color"),
    splashColor$3: dart.privateName(outline_button, "_OutlineButton.splashColor"),
    focusColor$4: dart.privateName(outline_button, "_OutlineButton.focusColor"),
    hoverColor$4: dart.privateName(outline_button, "_OutlineButton.hoverColor"),
    highlightColor$2: dart.privateName(outline_button, "_OutlineButton.highlightColor"),
    highlightElevation$2: dart.privateName(outline_button, "_OutlineButton.highlightElevation"),
    borderSide$1: dart.privateName(outline_button, "_OutlineButton.borderSide"),
    disabledBorderColor$1: dart.privateName(outline_button, "_OutlineButton.disabledBorderColor"),
    highlightedBorderColor$1: dart.privateName(outline_button, "_OutlineButton.highlightedBorderColor"),
    padding$4: dart.privateName(outline_button, "_OutlineButton.padding"),
    visualDensity$4: dart.privateName(outline_button, "_OutlineButton.visualDensity"),
    shape$8: dart.privateName(outline_button, "_OutlineButton.shape"),
    clipBehavior$6: dart.privateName(outline_button, "_OutlineButton.clipBehavior"),
    focusNode$5: dart.privateName(outline_button, "_OutlineButton.focusNode"),
    autofocus$5: dart.privateName(outline_button, "_OutlineButton.autofocus"),
    child$7: dart.privateName(outline_button, "_OutlineButton.child"),
    materialTapTargetSize$2: dart.privateName(outline_button, "_OutlineButton.materialTapTargetSize"),
    ___OutlineButtonState__controller: dart.privateName(outline_button, "_#_OutlineButtonState#_controller"),
    ___OutlineButtonState__controller_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_controller#isSet"),
    ___OutlineButtonState__fillAnimation: dart.privateName(outline_button, "_#_OutlineButtonState#_fillAnimation"),
    ___OutlineButtonState__fillAnimation_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_fillAnimation#isSet"),
    ___OutlineButtonState__elevationAnimation: dart.privateName(outline_button, "_#_OutlineButtonState#_elevationAnimation"),
    ___OutlineButtonState__elevationAnimation_isSet: dart.privateName(outline_button, "_#_OutlineButtonState#_elevationAnimation#isSet"),
    _pressed$1: dart.privateName(outline_button, "_pressed"),
    _controller$3: dart.privateName(outline_button, "_controller"),
    _fillAnimation: dart.privateName(outline_button, "_fillAnimation"),
    _elevationAnimation: dart.privateName(outline_button, "_elevationAnimation"),
    _handleHighlightChanged$1: dart.privateName(outline_button, "_handleHighlightChanged"),
    _getFillColor: dart.privateName(outline_button, "_getFillColor"),
    _outlineColor: dart.privateName(outline_button, "_outlineColor"),
    _getOutline: dart.privateName(outline_button, "_getOutline"),
    _getHighlightElevation: dart.privateName(outline_button, "_getHighlightElevation"),
    shape$9: dart.privateName(outline_button, "_OutlineBorder.shape"),
    side: dart.privateName(outline_button, "_OutlineBorder.side"),
    $runtimeType: dartx.runtimeType,
    onPressed$9: dart.privateName(button, "RawMaterialButton.onPressed"),
    onLongPress$4: dart.privateName(button, "RawMaterialButton.onLongPress"),
    onHighlightChanged$1: dart.privateName(button, "RawMaterialButton.onHighlightChanged"),
    mouseCursor$5: dart.privateName(button, "RawMaterialButton.mouseCursor"),
    textStyle: dart.privateName(button, "RawMaterialButton.textStyle"),
    fillColor: dart.privateName(button, "RawMaterialButton.fillColor"),
    focusColor$5: dart.privateName(button, "RawMaterialButton.focusColor"),
    hoverColor$5: dart.privateName(button, "RawMaterialButton.hoverColor"),
    highlightColor$3: dart.privateName(button, "RawMaterialButton.highlightColor"),
    splashColor$4: dart.privateName(button, "RawMaterialButton.splashColor"),
    elevation$7: dart.privateName(button, "RawMaterialButton.elevation"),
    hoverElevation$2: dart.privateName(button, "RawMaterialButton.hoverElevation"),
    focusElevation$2: dart.privateName(button, "RawMaterialButton.focusElevation"),
    highlightElevation$3: dart.privateName(button, "RawMaterialButton.highlightElevation"),
    disabledElevation$2: dart.privateName(button, "RawMaterialButton.disabledElevation"),
    padding$5: dart.privateName(button, "RawMaterialButton.padding"),
    visualDensity$5: dart.privateName(button, "RawMaterialButton.visualDensity"),
    constraints$1: dart.privateName(button, "RawMaterialButton.constraints"),
    shape$10: dart.privateName(button, "RawMaterialButton.shape"),
    animationDuration$1: dart.privateName(button, "RawMaterialButton.animationDuration"),
    child$8: dart.privateName(button, "RawMaterialButton.child"),
    materialTapTargetSize$3: dart.privateName(button, "RawMaterialButton.materialTapTargetSize"),
    focusNode$6: dart.privateName(button, "RawMaterialButton.focusNode"),
    autofocus$6: dart.privateName(button, "RawMaterialButton.autofocus"),
    clipBehavior$7: dart.privateName(button, "RawMaterialButton.clipBehavior"),
    enableFeedback$4: dart.privateName(button, "RawMaterialButton.enableFeedback"),
    VisualDensity_vertical: dart.privateName(theme_data, "VisualDensity.vertical"),
    VisualDensity_horizontal: dart.privateName(theme_data, "VisualDensity.horizontal"),
    _states$1: dart.privateName(button, "_states"),
    _hovered$1: dart.privateName(button, "_hovered"),
    _focused$1: dart.privateName(button, "_focused"),
    _pressed$2: dart.privateName(button, "_pressed"),
    _disabled$1: dart.privateName(button, "_disabled"),
    _updateState$1: dart.privateName(button, "_updateState"),
    _handleHighlightChanged$2: dart.privateName(button, "_handleHighlightChanged"),
    _handleHoveredChanged$1: dart.privateName(button, "_handleHoveredChanged"),
    _handleFocusedChanged$1: dart.privateName(button, "_handleFocusedChanged"),
    _effectiveElevation: dart.privateName(button, "_effectiveElevation"),
    minSize$1: dart.privateName(button, "_InputPadding.minSize"),
    _minSize$1: dart.privateName(button, "_minSize"),
    _computeSize$1: dart.privateName(button, "_computeSize"),
    textStyle$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.textStyle")
  };
  var S$ = {
    constraints$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.constraints"),
    color$7: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.color"),
    selectedColor$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedColor"),
    disabledColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledColor"),
    fillColor$1: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.fillColor"),
    focusColor$6: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.focusColor"),
    highlightColor$4: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.highlightColor"),
    splashColor$5: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.splashColor"),
    hoverColor$6: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.hoverColor"),
    borderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderColor"),
    selectedBorderColor: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.selectedBorderColor"),
    disabledBorderColor$2: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.disabledBorderColor"),
    borderWidth: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderWidth"),
    borderRadius: dart.privateName(toggle_buttons_theme, "ToggleButtonsThemeData.borderRadius"),
    data: dart.privateName(toggle_buttons_theme, "ToggleButtonsTheme.data"),
    backgroundColor$5: dart.privateName(time_picker_theme, "TimePickerThemeData.backgroundColor"),
    hourMinuteTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextColor"),
    hourMinuteColor: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteColor"),
    dayPeriodTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextColor"),
    dayPeriodColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodColor"),
    dialHandColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialHandColor"),
    dialBackgroundColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialBackgroundColor"),
    dialTextColor: dart.privateName(time_picker_theme, "TimePickerThemeData.dialTextColor"),
    entryModeIconColor: dart.privateName(time_picker_theme, "TimePickerThemeData.entryModeIconColor"),
    hourMinuteTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteTextStyle"),
    dayPeriodTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodTextStyle"),
    helpTextStyle: dart.privateName(time_picker_theme, "TimePickerThemeData.helpTextStyle"),
    shape$11: dart.privateName(time_picker_theme, "TimePickerThemeData.shape"),
    hourMinuteShape: dart.privateName(time_picker_theme, "TimePickerThemeData.hourMinuteShape"),
    dayPeriodShape: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodShape"),
    dayPeriodBorderSide: dart.privateName(time_picker_theme, "TimePickerThemeData.dayPeriodBorderSide"),
    inputDecorationTheme: dart.privateName(time_picker_theme, "TimePickerThemeData.inputDecorationTheme"),
    data$1: dart.privateName(time_picker_theme, "TimePickerTheme.data"),
    cursorColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.cursorColor"),
    selectionColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.selectionColor"),
    selectionHandleColor: dart.privateName(text_selection_theme, "TextSelectionThemeData.selectionHandleColor"),
    data$2: dart.privateName(text_selection_theme, "TextSelectionTheme.data"),
    style$2: dart.privateName(text_button_theme, "TextButtonThemeData.style"),
    $hashCode: dartx.hashCode,
    data$3: dart.privateName(text_button_theme, "TextButtonTheme.data"),
    _name$11: dart.privateName(tabs$, "_name"),
    text: dart.privateName(tabs$, "Tab.text"),
    child$9: dart.privateName(tabs$, "Tab.child"),
    icon$2: dart.privateName(tabs$, "Tab.icon"),
    iconMargin: dart.privateName(tabs$, "Tab.iconMargin"),
    _buildLabelText: dart.privateName(tabs$, "_buildLabelText"),
    labelStyle: dart.privateName(tabs$, "_TabStyle.labelStyle"),
    unselectedLabelStyle: dart.privateName(tabs$, "_TabStyle.unselectedLabelStyle"),
    selected$1: dart.privateName(tabs$, "_TabStyle.selected"),
    labelColor: dart.privateName(tabs$, "_TabStyle.labelColor"),
    unselectedLabelColor: dart.privateName(tabs$, "_TabStyle.unselectedLabelColor"),
    child$10: dart.privateName(tabs$, "_TabStyle.child"),
    $insert: dartx.insert,
    _currentTabOffsets: dart.privateName(tabs$, "_currentTabOffsets"),
    _currentTextDirection: dart.privateName(tabs$, "_currentTextDirection"),
    _currentRect: dart.privateName(tabs$, "_currentRect"),
    _painter: dart.privateName(tabs$, "_painter"),
    _needsPaint: dart.privateName(tabs$, "_needsPaint"),
    $isNotEmpty: dartx.isNotEmpty,
    $floor: dartx.floor,
    $ceil: dartx.ceil,
    $toInt: dartx.toInt,
    _initialViewportDimensionWasZero: dart.privateName(tabs$, "_initialViewportDimensionWasZero"),
    _initialScrollOffset: dart.privateName(tabs$, "_initialScrollOffset"),
    tabs: dart.privateName(tabs$, "TabBar.tabs"),
    controller: dart.privateName(tabs$, "TabBar.controller"),
    isScrollable: dart.privateName(tabs$, "TabBar.isScrollable"),
    indicatorColor: dart.privateName(tabs$, "TabBar.indicatorColor"),
    indicatorWeight: dart.privateName(tabs$, "TabBar.indicatorWeight"),
    indicatorPadding: dart.privateName(tabs$, "TabBar.indicatorPadding"),
    indicator: dart.privateName(tabs$, "TabBar.indicator"),
    automaticIndicatorColorAdjustment: dart.privateName(tabs$, "TabBar.automaticIndicatorColorAdjustment"),
    indicatorSize: dart.privateName(tabs$, "TabBar.indicatorSize"),
    labelColor$1: dart.privateName(tabs$, "TabBar.labelColor"),
    unselectedLabelColor$1: dart.privateName(tabs$, "TabBar.unselectedLabelColor"),
    labelStyle$1: dart.privateName(tabs$, "TabBar.labelStyle"),
    labelPadding: dart.privateName(tabs$, "TabBar.labelPadding"),
    unselectedLabelStyle$1: dart.privateName(tabs$, "TabBar.unselectedLabelStyle"),
    overlayColor: dart.privateName(tabs$, "TabBar.overlayColor"),
    dragStartBehavior$1: dart.privateName(tabs$, "TabBar.dragStartBehavior"),
    mouseCursor$6: dart.privateName(tabs$, "TabBar.mouseCursor"),
    enableFeedback$5: dart.privateName(tabs$, "TabBar.enableFeedback"),
    onTap$1: dart.privateName(tabs$, "TabBar.onTap"),
    physics: dart.privateName(tabs$, "TabBar.physics"),
    _scrollController: dart.privateName(tabs$, "_scrollController"),
    _controller$4: dart.privateName(tabs$, "_controller"),
    _indicatorPainter: dart.privateName(tabs$, "_indicatorPainter"),
    _currentIndex: dart.privateName(tabs$, "_currentIndex"),
    ___TabBarState__tabStripWidth: dart.privateName(tabs$, "_#_TabBarState#_tabStripWidth"),
    ___TabBarState__tabStripWidth_isSet: dart.privateName(tabs$, "_#_TabBarState#_tabStripWidth#isSet"),
    ___TabBarState__tabKeys: dart.privateName(tabs$, "_#_TabBarState#_tabKeys"),
    ___TabBarState__tabKeys_isSet: dart.privateName(tabs$, "_#_TabBarState#_tabKeys#isSet"),
    _tabStripWidth: dart.privateName(tabs$, "_tabStripWidth"),
    _tabKeys: dart.privateName(tabs$, "_tabKeys"),
    $map: dartx.map,
    $toList: dartx.toList,
    _indicator: dart.privateName(tabs$, "_indicator"),
    _controllerIsValid: dart.privateName(tabs$, "_controllerIsValid"),
    _handleTabControllerAnimationTick: dart.privateName(tabs$, "_handleTabControllerAnimationTick"),
    _handleTabControllerTick: dart.privateName(tabs$, "_handleTabControllerTick"),
    _updateTabController: dart.privateName(tabs$, "_updateTabController"),
    _initIndicatorPainter: dart.privateName(tabs$, "_initIndicatorPainter"),
    $addAll: dartx.addAll,
    $removeRange: dartx.removeRange,
    _tabScrollOffset: dart.privateName(tabs$, "_tabScrollOffset"),
    _tabCenteredScrollOffset: dart.privateName(tabs$, "_tabCenteredScrollOffset"),
    _scrollToCurrentIndex: dart.privateName(tabs$, "_scrollToCurrentIndex"),
    _scrollToControllerValue: dart.privateName(tabs$, "_scrollToControllerValue"),
    _saveTabOffsets: dart.privateName(tabs$, "_saveTabOffsets"),
    _handleTap: dart.privateName(tabs$, "_handleTap"),
    _buildStyledTab: dart.privateName(tabs$, "_buildStyledTab"),
    controller$1: dart.privateName(tabs$, "TabBarView.controller"),
    children$1: dart.privateName(tabs$, "TabBarView.children"),
    physics$1: dart.privateName(tabs$, "TabBarView.physics"),
    dragStartBehavior$2: dart.privateName(tabs$, "TabBarView.dragStartBehavior"),
    ___TabBarViewState__pageController: dart.privateName(tabs$, "_#_TabBarViewState#_pageController"),
    ___TabBarViewState__pageController_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_pageController#isSet"),
    ___TabBarViewState__children: dart.privateName(tabs$, "_#_TabBarViewState#_children"),
    ___TabBarViewState__children_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_children#isSet"),
    ___TabBarViewState__childrenWithKey: dart.privateName(tabs$, "_#_TabBarViewState#_childrenWithKey"),
    ___TabBarViewState__childrenWithKey_isSet: dart.privateName(tabs$, "_#_TabBarViewState#_childrenWithKey#isSet"),
    _warpUnderwayCount: dart.privateName(tabs$, "_warpUnderwayCount"),
    _pageController: dart.privateName(tabs$, "_pageController"),
    _children$1: dart.privateName(tabs$, "_children"),
    _childrenWithKey: dart.privateName(tabs$, "_childrenWithKey"),
    _updateChildren: dart.privateName(tabs$, "_updateChildren"),
    _warpToCurrentIndex: dart.privateName(tabs$, "_warpToCurrentIndex"),
    $round: dartx.round,
    _handleScrollNotification: dart.privateName(tabs$, "_handleScrollNotification"),
    ScrollPhysics_parent: dart.privateName(scroll_physics, "ScrollPhysics.parent"),
    backgroundColor$6: dart.privateName(tabs$, "TabPageSelectorIndicator.backgroundColor"),
    borderColor$1: dart.privateName(tabs$, "TabPageSelectorIndicator.borderColor"),
    size: dart.privateName(tabs$, "TabPageSelectorIndicator.size"),
    controller$2: dart.privateName(tabs$, "TabPageSelector.controller"),
    indicatorSize$1: dart.privateName(tabs$, "TabPageSelector.indicatorSize"),
    color$8: dart.privateName(tabs$, "TabPageSelector.color"),
    selectedColor$2: dart.privateName(tabs$, "TabPageSelector.selectedColor"),
    _buildTabIndicator: dart.privateName(tabs$, "_buildTabIndicator"),
    indicator$1: dart.privateName(tab_bar_theme, "TabBarTheme.indicator"),
    indicatorSize$2: dart.privateName(tab_bar_theme, "TabBarTheme.indicatorSize"),
    labelColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.labelColor"),
    labelPadding$1: dart.privateName(tab_bar_theme, "TabBarTheme.labelPadding"),
    labelStyle$2: dart.privateName(tab_bar_theme, "TabBarTheme.labelStyle"),
    unselectedLabelColor$2: dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelColor"),
    unselectedLabelStyle$2: dart.privateName(tab_bar_theme, "TabBarTheme.unselectedLabelStyle"),
    thumbColor: dart.privateName(switch_theme, "SwitchThemeData.thumbColor"),
    trackColor: dart.privateName(switch_theme, "SwitchThemeData.trackColor"),
    materialTapTargetSize$4: dart.privateName(switch_theme, "SwitchThemeData.materialTapTargetSize"),
    mouseCursor$7: dart.privateName(switch_theme, "SwitchThemeData.mouseCursor"),
    overlayColor$1: dart.privateName(switch_theme, "SwitchThemeData.overlayColor"),
    splashRadius$1: dart.privateName(switch_theme, "SwitchThemeData.splashRadius"),
    a: dart.privateName(switch_theme, "_LerpProperties.a"),
    b: dart.privateName(switch_theme, "_LerpProperties.b"),
    t: dart.privateName(switch_theme, "_LerpProperties.t"),
    lerpFunction: dart.privateName(switch_theme, "_LerpProperties.lerpFunction"),
    data$4: dart.privateName(switch_theme, "SwitchTheme.data"),
    _name$12: dart.privateName(snack_bar_theme, "_name"),
    backgroundColor$7: dart.privateName(snack_bar_theme, "SnackBarThemeData.backgroundColor"),
    actionTextColor: dart.privateName(snack_bar_theme, "SnackBarThemeData.actionTextColor"),
    disabledActionTextColor: dart.privateName(snack_bar_theme, "SnackBarThemeData.disabledActionTextColor"),
    contentTextStyle$1: dart.privateName(snack_bar_theme, "SnackBarThemeData.contentTextStyle"),
    elevation$8: dart.privateName(snack_bar_theme, "SnackBarThemeData.elevation"),
    shape$12: dart.privateName(snack_bar_theme, "SnackBarThemeData.shape"),
    behavior$1: dart.privateName(snack_bar_theme, "SnackBarThemeData.behavior"),
    data$5: dart.privateName(slider_theme, "SliderTheme.data"),
    _name$13: dart.privateName(slider_theme, "_name"),
    trackHeight: dart.privateName(slider_theme, "SliderThemeData.trackHeight"),
    activeTrackColor: dart.privateName(slider_theme, "SliderThemeData.activeTrackColor"),
    inactiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.inactiveTrackColor"),
    disabledActiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.disabledActiveTrackColor"),
    disabledInactiveTrackColor: dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTrackColor"),
    activeTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.activeTickMarkColor"),
    inactiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.inactiveTickMarkColor"),
    disabledActiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.disabledActiveTickMarkColor"),
    disabledInactiveTickMarkColor: dart.privateName(slider_theme, "SliderThemeData.disabledInactiveTickMarkColor"),
    thumbColor$1: dart.privateName(slider_theme, "SliderThemeData.thumbColor"),
    overlappingShapeStrokeColor: dart.privateName(slider_theme, "SliderThemeData.overlappingShapeStrokeColor"),
    disabledThumbColor: dart.privateName(slider_theme, "SliderThemeData.disabledThumbColor"),
    overlayColor$2: dart.privateName(slider_theme, "SliderThemeData.overlayColor"),
    valueIndicatorColor: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorColor"),
    overlayShape: dart.privateName(slider_theme, "SliderThemeData.overlayShape"),
    tickMarkShape: dart.privateName(slider_theme, "SliderThemeData.tickMarkShape"),
    thumbShape: dart.privateName(slider_theme, "SliderThemeData.thumbShape"),
    trackShape: dart.privateName(slider_theme, "SliderThemeData.trackShape"),
    valueIndicatorShape: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorShape"),
    rangeTickMarkShape: dart.privateName(slider_theme, "SliderThemeData.rangeTickMarkShape"),
    rangeThumbShape: dart.privateName(slider_theme, "SliderThemeData.rangeThumbShape"),
    rangeTrackShape: dart.privateName(slider_theme, "SliderThemeData.rangeTrackShape"),
    rangeValueIndicatorShape: dart.privateName(slider_theme, "SliderThemeData.rangeValueIndicatorShape"),
    showValueIndicator: dart.privateName(slider_theme, "SliderThemeData.showValueIndicator"),
    valueIndicatorTextStyle: dart.privateName(slider_theme, "SliderThemeData.valueIndicatorTextStyle"),
    minThumbSeparation: dart.privateName(slider_theme, "SliderThemeData.minThumbSeparation"),
    thumbSelector: dart.privateName(slider_theme, "SliderThemeData.thumbSelector"),
    RoundSliderOverlayShape_overlayRadius: dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius"),
    RoundSliderTickMarkShape_tickMarkRadius: dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius"),
    RoundSliderThumbShape_pressedElevation: dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation"),
    RoundSliderThumbShape_elevation: dart.privateName(slider_theme, "RoundSliderThumbShape.elevation"),
    RoundSliderThumbShape_disabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius"),
    RoundSliderThumbShape_enabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius"),
    RoundRangeSliderTickMarkShape_tickMarkRadius: dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius"),
    RoundRangeSliderThumbShape_pressedElevation: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation"),
    RoundRangeSliderThumbShape_elevation: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation"),
    RoundRangeSliderThumbShape_disabledThumbRadius: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius"),
    RoundRangeSliderThumbShape_enabledThumbRadius: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius"),
    disabledThumbGapWidth: dart.privateName(slider_theme, "RectangularSliderTrackShape.disabledThumbGapWidth"),
    tickMarkRadius: dart.privateName(slider_theme, "RoundSliderTickMarkShape.tickMarkRadius"),
    tickMarkRadius$1: dart.privateName(slider_theme, "RoundRangeSliderTickMarkShape.tickMarkRadius"),
    enabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.enabledThumbRadius"),
    disabledThumbRadius: dart.privateName(slider_theme, "RoundSliderThumbShape.disabledThumbRadius"),
    elevation$9: dart.privateName(slider_theme, "RoundSliderThumbShape.elevation"),
    pressedElevation: dart.privateName(slider_theme, "RoundSliderThumbShape.pressedElevation"),
    _disabledThumbRadius: dart.privateName(slider_theme, "_disabledThumbRadius"),
    enabledThumbRadius$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.enabledThumbRadius"),
    disabledThumbRadius$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.disabledThumbRadius"),
    elevation$10: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.elevation"),
    pressedElevation$1: dart.privateName(slider_theme, "RoundRangeSliderThumbShape.pressedElevation"),
    overlayRadius: dart.privateName(slider_theme, "RoundSliderOverlayShape.overlayRadius"),
    _upperRectangleWidth: dart.privateName(slider_theme, "_upperRectangleWidth"),
    _getIdealOffset: dart.privateName(slider_theme, "_getIdealOffset"),
    start: dart.privateName(slider_theme, "RangeValues.start"),
    end: dart.privateName(slider_theme, "RangeValues.end"),
    start$1: dart.privateName(slider_theme, "RangeLabels.start"),
    end$1: dart.privateName(slider_theme, "RangeLabels.end"),
    thickness$2: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thickness"),
    showTrackOnHover: dart.privateName(scrollbar_theme, "ScrollbarThemeData.showTrackOnHover"),
    isAlwaysShown: dart.privateName(scrollbar_theme, "ScrollbarThemeData.isAlwaysShown"),
    radius: dart.privateName(scrollbar_theme, "ScrollbarThemeData.radius"),
    thumbColor$2: dart.privateName(scrollbar_theme, "ScrollbarThemeData.thumbColor"),
    trackColor$1: dart.privateName(scrollbar_theme, "ScrollbarThemeData.trac